？

？

Ｉ
Ｉ

Ｘ
ｆ
￣
￣
Ｉ

ｒ
ｖ＾


＼

＇

＇
Ｉ
Ｕ
Ｎ
Ｉ
Ｖ 
Ｅ 
Ｒ Ｓ
Ｉ
Ｔ 
Ｙ
 
Ｏ 
Ｆ

Ｅ Ｌ Ｅ 
Ｃ Ｔ Ｒ Ｏ Ｎ
Ｉ
Ｃ
Ｓ 
Ｃ
Ｉ
Ｅ 
Ｎ
Ｃ 
Ｅ 
Ａ 
Ｎ Ｄ Ｔ 
Ｅ 
Ｃ Ｈ Ｎ Ｏ 
Ｌ 
Ｏ Ｇ Ｙ

Ｏ
Ｆ
Ｃ Ｈ
Ｉ
Ｎ Ａ
专 业 学 位 硕 
± 学 位 论 文
Ｍ 
Ａ 
Ｓ Ｔ
Ｅ 
Ｒ

Ｔ Ｈ
 Ｅ 
Ｓ
Ｉ
Ｓ

Ｆ 
Ｏ 
Ｒ

Ｐ Ｒ
Ｏ 
Ｆ Ｅ Ｓ Ｓ
Ｉ
Ｏ 
Ｎ 
Ａ 
Ｌ

Ｄ 
Ｅ 
Ｇ 
Ｒ 
Ｅ Ｅ
化
－
請

ｌ
ｅ
ｐ
ｆ

Ａ
＇
＇
论支题 
目

飞机线束
工
艺数据
生成及 管
理

系
统 的设计 与实现

专业学位类别
工 
程 硕 壬

学号
２０ １ １ ２ ２ ２ ４ ０ ８ 
１ ３
作 者 姓 
名

傅 佳

指 导 教 师

李毅超 教授
独 创 性 声 明
本人 声 
明 
所 
呈 
交 的 学位 论文 是本 人在导 师 指
导 下 进斤 的 研究 
工
作及取 得 
的 研究 成果
。
据 我所 知
，
除 
了 
文 中
 
特 别 加 标
注 和 致谢 的地
方外
，
论文 中
 不包含其他人 
已经发表或撰 写过的研 究成 果
，
也不包 含
为 获得 电子 科技大 学 或 其 它 教育 机 构 的 学位 或
证书 而使用 过 
的 材料
。
与 我
一
同
工 
作 的 
同 志对 本研 究所 做 
的 任何 贡 献均 
己 
在 论 文 
中 作 
了 明
确 的 说 明 并 表示谢意
。
作 者
签 名
；

雖
曰 
期
；
年 
月
夕
曰
论文使用授权
本 学位 论文 作者完全 
了 
解 电子 科技大学有 关保 
留
、
使用学 位论文
的 规定
，
有权保 
留 并 
向 国 家有关部 
口 或机构
送 交论文 
的 复 
印 件 和 磁
盘
，
允 许论文被 
查 阅 和 借 
阅
。
本人授权 
电子科技大学可 将学 位 论文
的 全部 或部 分 
内 
容 编 
入有 关数据 库 进行检索
，
可 Ｗ采用 
影 印
、
缩 印 或
扫 描 等复制手段 傑 存
、
汇 编学 位论文
。
（
保密 的学 位
 在解密后 应遵 守
此规定
）
作者
签 名
：
＼
聲
ｆ

导师 签名
：
麥
曰 
期
；
人
／
方 
年 
知
＾
曰 
 
分类号
                                    
密级      
 
UDC
注
1
  
                             
 
 
学 
   位
    论
    文
 
 
飞机线束工艺数据生成及管理 
系统的设计与实现 
（题名和副题名）
 
傅佳 
（
作者姓名）
 
指导教师
  
        
李毅超        教   授
 
      
电子科技大学     成   都 
            
   
（姓名、职称、单位名称）
     
申请学位级别
  
    
硕士
     
专业学位类别
  
        
工程硕士
        
 
工程领域名称
              
电子与通信工程
 
提交论文日期
  2014.5.3    
论文答辩日期
     2014.5.21      
 
学位授予单位和日期
   
电子科技大学 
  2014  
年
  6  
月
    
日
       
答辩委员会主席
        
 
          
 
评阅人
  
               
 
                              
注 
1
：注明《国际十进分类法 
UDC
》的类号。 
 
DESIGN AND IMPLEMENT OF THE AIRCRAFT 
WIRING HARNESS PROCESS DATA 
GENERATION AND MANAGEMENT SYSTEM
 
 
 
 
A Master Thesis Submitted to 
University of Electronic Science and Technology of China 
 
 
 
Major:           Master of Engineering 
Author:                     Fu Jia
 
Advisor:           Professor Li Yichao
   
School 
:     School of Aeronautics and Astronautics
   摘要
 
I 
摘
  
要
 
传统的飞机线束工艺设计与生产制造主要基于 
Auto CAD 
图纸和 
Excel 
文件来
完成。采用这种方式，缺少数字化的线束设计数据提取，需要耗费巨大的人力成
本；缺少数字化的设计规则校验，造成设计数据和工艺数据不一致。同时通过分
析当前厂内飞机线束设计与生产的业务现状，发现存在以下问题：工艺数据处理
数字化程度低且不够灵活、工艺报表信息不全、缺少工艺变更及状态管理。
 
针对传统方式的固有缺陷和厂商存在的业务问题，在线束设计过程中，我们
引入了 
Mentor 
公司的 
CHS(Capital Harness System)
专业线束设计软件，它支持从
设计文件中直接提取线束数据并进行设计规则校验。我们的目标是基于 
CHS 
软件
设计并实现一个新型的飞机线束工艺数据生成与管理系统，能从根本上解决以上
问题。本文完成的主要工作如下：
 
1.  
调研飞机线束设计与生产的业务现状，分析现存业务问题，在此基础上做
出需求分析，最终提出基于 
CHS 
软件来提取设计数据并校验的解决方案。
 
2.  
设计并实现一个基于 
CHS 
的设计数据提取并校验子系统，根据飞机设计
与生产的要求对 
CHS 
软件进行二次开发，从 
CHS 
设计文件中直接提取设计数据
并进行设计规则校验，然后将提取的设计数据存入 
Oracle 
数据库。
 
3.  
设计并实现一个基于 
B/S 
架构的飞机线束工艺数据处理平台子系统。该平
台的主要功能是：对提取到数据库的数据进行工艺处理以生成指定格式的工艺报
表，从而指导工人进行生产；对工艺数据及执行状态进行管理；对工艺数据进行
灵活处理；与厂内其他系统进行集成。
 
本文创新性地提出了一种有别于传统方式的全新解决方案
--
直接从设计文件
中提取线束数据并进行设计规则校验，而不是先把设计数据转换为 
Excel 
表格和
CAD 
图纸再进行提取，从而使得获取的数据更丰富，便于进行工艺审核；支持数
字化的设计规则校验，很好地保证了数据的一致性。基于该解决方案我们设计并
实现了一个新型的飞机线束工艺数据生成及管理系统。在系统中我们实现了关键
技术
--
工艺报表生成，解决了生产中工艺数据处理复杂等问题。系统投入使用一
年，用户反应良好，大大提升了工作效率，满足了现代飞机线束工艺设计与生产
制造的要求。
 
 
关键词：飞机线束，工艺设计，生产制造，工艺数据处理，
CHS ABSTRACT 
II 
ABSTRACT 
the  traditional  process  design  and  production  of  aircraft  wiring  harness  has  been 
completed  based  on  Auto CAD  drawings  and  Excel  documents.  The  traditional  way 
lacks  the  extraction  of  digitized  harness  design  data,  and  takes  a  huge  human  cost;  it 
lacks  the  digital  design  rule  checking,  resulting  in  the  inconsistencies  of  design  data 
and  process  data.  Meanwhile,  by  analyzing  the  currents  status  of  business  of  the 
Harness design and production of aircraft, there are some problems has been found as 
follows:  Low  degree  of  digitization  and  Inflexible  data  processing,  incomplete 
information  technology  statements,  Lack  of  change  management  and  feedback  of 
change execution state. 
For the inherent defects of the traditional way and existing business problems of 
the  vendors,  the  CHS  (Capital  Harness  System)  professional  harness  design  software 
of  American  Mentor  Graphics  Corporation  has  been  introduced  in  aircraft  wiring 
harness  design  process,  at  the  same  time,  the  CHS  supports  extracting  data  directly 
from  the  design  documents  and  checking  design  rule  and  provides  a  good  support  to 
configuration management. A new generation aircraft Harness process data generation 
and  management  system  could  be  designed  and  implemented  based  on  CHS  software 
to solve the above problems fundamentally. The main work of this thesis completed as 
follows: 
1.  Researching  the  business  status  of  aircraft  harness  design  and  production  and 
analyzing  existing  business  problems.  Finally,  the  solution  ,extracting  the  design  data 
and calibration, has been putted forward in this thesis based on the demand analysis. 
2. A subsystem of design data extraction and verification based on CHS has been 
designed  and  implemented.  According  to  the  requirements  of  aircraft  design  and 
production, A secondary development has been applied to directly extract design data 
from  the  CHS  design  documents  and  make  DRC  checking,  then  the  design  data  has 
been stored in the Oracle database. 
3. A subsystem of aircraft harness data processing based on B/S structure has been 
designed  and  implemented.  The  main  functions  of  the  subsystem  as  follows: 
processing the extracting data of database and generating the specified format report , 
so  as  to  guiding  workers  to  produce;  managing  the  process  data  and  execution  state; ABSTRACT 
III 
processing data flexibly; integrating with other systems. 
A  novel  solutions  has  been  proposed  in  this  thesis  which  is  quite  different  from 
the  traditional  way.  In  this  way,  the  wiring  harness  data  has  been  directly  extracted 
from the design documents and making the design rule checking, rather than taking the 
design  data  into  Excel  spreadsheet  and  CAD  drawings  for  extraction.  So  that  the 
extracting  data  is  more  rich  to  process  audit  easily.  At  the  same  time,  the  solution 
supports digital design rule checking and guarantees the data consistency well. Based 
on the solution, A new aircraft wiring harness process data generation and management 
system has been designed and implemented . The key technologies in the system, such 
as generating process report /solving the complex data processing in production and so 
on,  has  been  implemented.  The  system  has  been  putted  into  actual  engineering 
application for one year. it has good response , improves the working efficiency greatly 
and  meets  the  modern  aircraft  wiring  harness  process  design  and  manufacturing 
requirements 
 
Keywords:  aircraft  wiring  harness,  process  design,  manufacturing,  data  processing, 
CHS目录
 
IV 
目
  
录
 
第一章 绪论
 ............................................................................................................ 1 
1.1  
课题研究背景及意义
 ............................................................................... 1 
1.2  
课题研究现状与发展趋势
 ....................................................................... 2 
1.3  
研究目标与内容
 ....................................................................................... 4 
1.4  
本文结构安排
 ........................................................................................... 5 
第二章 系统相关技术概述
 .................................................................................... 6 
2.1  
构型管理
 ................................................................................................... 6 
2.2  
基于 
CHS 
电气系统设计平台的构型管理
 ............................................. 6 
2.3 J2EE 
平台及相关技术概述
 ....................................................................... 7 
2.3.1 J2EE 
平台及 
MVC 
模式简介
 ......................................................... 7 
2.3.2 Struts2 
相关技术概述
 ..................................................................... 9 
2.3.3 i Batis 
相关技术概述
 ...................................................................... 11 
2.3.4 Spring 
相关技术概述
 ................................................................... 12 
2.4  
工艺报表生成相关技术概述
 ................................................................. 14 
2.4.1 JXL 
技术简介
 ............................................................................... 14 
2.4.2 DOM4J 
技术简介
 ......................................................................... 15 
2.5  
本章小结
 ................................................................................................. 15 
第三章 系统分析
 .................................................................................................. 16 
3.1 
现有业务分析
 .......................................................................................... 16 
3.1.1  
线束生产业务流程
 ...................................................................... 16 
3.1.2  
变更业务处理过程
 ...................................................................... 17 
3.2 
现有问题分析
 .......................................................................................... 19 
3.2.1  
现有问题
 ...................................................................................... 19 
3.2.2  
问题原因
 ...................................................................................... 19 
3.2.3  
解决思路
 ...................................................................................... 19 
3.3  
系统需求分析
 ......................................................................................... 20 
3.3.1  
功能性需求
 .................................................................................. 20 
3.3.2  
非功能性需求
 .............................................................................. 21 
3.4  
本章小结
 ................................................................................................. 23 
第四章 系统总体设计
 .......................................................................................... 24 
4.1  
基于 
CHS 
提取设计数据并校验的解决方案
 ....................................... 24 
4.2  
系统运行环境
 ......................................................................................... 26 目录
 
V 
4.3  
系统功能结构
 ......................................................................................... 26 
4.4  
系统业务数据处理流程
 ......................................................................... 27 
4.5  
系统软件的总体设计
 ............................................................................. 28 
4.5.1  
系统软件结构
 .............................................................................. 28 
4.5.2  
系统关键技术
 .............................................................................. 31 
4.6  
数据库设计
 ............................................................................................. 34 
4.7  
本章小结
 ................................................................................................. 36 
第五章 系统详细设计与实现
 .............................................................................. 37 
5.1 CHS 
设计数据提取及校验子系统的详细设计与实现
 ......................... 37 
5.1.1  
设计数据提取模块
 ...................................................................... 37 
5.1.2  
设计规则校验模块
 ...................................................................... 44 
5.2  
线束工艺数据处理平台子系统的详细设计与实现
 ............................. 48 
5.2.1  
设计数据管理模块
 ...................................................................... 51 
5.2.2  
工艺数据管理模块
 ...................................................................... 52 
5.2.3  
工艺更改及状态管理模块
 .......................................................... 63 
5.2.4  
基础信息管理及对外接口模块
 .................................................. 65 
5.2.5  
系统配置及维护模块
 .................................................................. 66 
5.3  
数据库详细设计
 ..................................................................................... 68 
5.4  
本章小结
 ................................................................................................. 70 
第六章 测试与分析
 .............................................................................................. 72 
6.1  
测试说明
 ................................................................................................. 72 
6.2  
测试环境
 ................................................................................................. 72 
6.3  
系统功能测试与结果分析
 ..................................................................... 73 
6.3.1  
设计数据提取功能测试
 .............................................................. 73 
6.3.2  
设计规则校验功能测试
 .............................................................. 76 
6.3.3  
工艺数据管理功能测试
 .............................................................. 77 
6.3.4  
测试结果及分析
 .......................................................................... 80 
6.4  
本章小结
 ................................................................................................. 80 
第七章 总结与展望
 .............................................................................................. 81 
7.1  
工作总结
 ................................................................................................. 81 
7.2  
不足与展望
 ............................................................................................. 82 
致 谢
 ...................................................................................................................... 83 
参考文献
 ................................................................................................................ 84 第一章
  
绪论
 
1 
第一章
  
绪论
 
1.1  
课题研究背景及意义
 
随着现代飞机的快速发展，机载航电设备越来越多，飞机的“电网”也愈加
复杂。穿梭其中的各种线束是关联全机各部位电气系统与电子设备的桥梁和纽带，
联通了飞机各部分的通信，从而形成一个复杂而庞大的网络。曾有人把飞机的线
束生动的比喻为飞机的“中枢神经网络”，由此可见线束对飞机系统的质量和安全
有着至关重要的影响
[1]
。
 
在飞机制造中，线束生产是整个工程中生产周期较长、错误率较高、工艺较
繁杂、自动化水平成较低的环节。传统飞机电气系统的线束设计主要基于
Auto CAD 
图纸和 
Excel 
文件来完成
[2]
。采用这种方式，在线束设计数据提取的整
个过程中以及表格的更新和维护中，都需要耗费巨大的人力成本；工艺审查采用
手工模式、靠经验，问题发现率低，许多问题延迟到生产线上出现，影响了生产
进度；缺少 
DRC
（设计规则校验）校验措施，造成设计数据和工艺数据不一致；
电路图不方便查看；缺少统一有效的构型管理。同时公司之前的飞机线束工艺数
据处理平台存在以下问题，第一，之前的工艺平台为了保证数据的准确性、有效
性和一致性，在生产过程中，必须要工人进行繁琐而复杂的工艺预处理，占用了
很大一部分生产准备周期。第二，在工人生产中某些工艺数据文件缺少必要的工
艺数据和统计信息，给车间的工人在生产中带来极大的不便。第三，现代飞机复
杂化、多元化和系列化的要求越来越高，在飞机制造中呈现出多品种、小批量、
更改频繁等生产特点，这样也造成了大量的数据错误。甚至某些致命错误在试飞
阶段才被找出，严重威胁飞机和飞行员的安全
[3]
。第四，之前的工艺平台缺少对
更改数据的有效管理，造成了更改反馈机制不健全，更改文件混乱，更改数据的
一致性、安全性和可追溯无法保证。
 
因此，针对飞机线束传统的生产方式的固有缺陷以及之前的工艺平台在线束
生产中的业务问题，我们需要开发一个全新的飞机线束工艺数据生成与管理系统
来适应现代飞机线束生产。为此我们在引入美国 
Mentor  Graphics 
公司的
CHS(Capital  Harness  System)
专业线束设计软件来设计飞机电气系统线束的基础
上，根据飞机线束设计与生产的要求进行二次开发，开发数据提取插件来提取设
计文件中的设计数据并进行 
DRC 
校验，然后将提取的数据存入 
Oracle 
数据库，
以供新的工艺处理平台使用，这样大大地提高了设计的效率，同时也保证了设计
的可靠性和可维护性
[4]
。该系统我们以线束图号为机型和架次为搜索条件，以对电子科技大学硕士学位论文
 
2 
应条件下的线束号为主键，对与该线束配套的设计数据和工艺数据进行基于构型
的统一管理；根据线束生产的工艺规则生成指定格式的工艺文件以指导工人进行
生产；通过 
XML 
文件实现工艺信息转换和共享；增加更改反馈机制，实现对更
改文件的统一有效的管理。
 
随着现代飞机日新月异的飞速发展，基于构型的全数字化的飞机电气系统线
束设计制造技术已经成为了主流。为了更高质量的满足不同客户的差异化需求，
更好的采用新的理念和技术，改良并增进设计和工艺，获得更高的经济效益，整
个飞机线束产品的设计和生产过程中总是处于连续不断的变化之中
[5]
。同时在飞
机线束生产中，由于整机的零部件数量庞大、更改频繁，所以整个飞机线束设计
与生产的数据管理极其复杂。为了保证在飞机线束数字化设计与生产制造过程设
计数据与工艺数据的准确性、一致性、完整性和可追踪性，更好的控制复杂的数
字化飞机线束产品的开发与维护，在最快的时间内用最少的成本以最好的质量满
足飞机产品系列化多元化和差异化的需求，因此我们的飞机线束工艺数据生成与
管理系统在实现基础功能上还一定要对飞机线束的构型进行有效的管理和维护，
以达到以下目标：简化飞机线束设计与生产的数据管理和升级，在最大程度上减
少设计的重复性，加强飞机线束产品的控制手段，从而保证飞机线束设计与生产
过程中数据的准确性、一致性和完整性要求，并能记录和反馈工艺更改的状态，
反应更改落实的详细进展情况
[6]
。
 
1.2  
课题研究现状与发展趋势
 
传统的飞机线束工艺设计与生产主要基于 
Auto CAD 
图纸和 
Excel 
文件来完
成。采用这种方式，缺少数字化的线束设计数据提取，需要耗费巨大的人力成本；
缺少数字化的设计规则校验，造成设计数据和工艺数据不一致；工艺审查采取手
工模式、靠经验，问题的发现率低下；缺少统一有效的构型管理；电路图不方便
查看；大量表格维护更是费时费力。在飞机制造中，线束生产是整个工程中生产
周期较长、错误率较高、工艺较繁杂、自动化水平成较低的环节
[7]
。厂内基于传
统方式的线束工艺数据生成与管理系统也存在工艺繁琐、效率低下、自动化水平
低、高错误率、工艺信息不全和缺少对构型管理的支持等问题。至于构型管理的
概念在 
60 
年代才开始提出，构型，是一种设计理念，是指在某一具体的时间里，
由相关的文件所描写的某个产品的构成状态，是飞机设计部门来确定的某一产品
的特定标识，它可标识零部件、小型组件、大型组件、部件乃至整架飞机
[8]
。我
们的飞机线束工艺数据生成与管理系统将引入构型管理这一概念，以满足现代飞
机产品系列化、多元化和差异化以及飞机产品更改频繁的需求
[9]
。
 第一章
  
绪论
 
3 
相对于构型管理和数字化管理等先进技术在我国飞机生产中的具体应用和实
践经验，欧美的航空巨头则是绝对的先行者与领导者，拥有巨大的优势 
10]
。
 
美国的波音飞机公司，为了从源头上反思和极大地简化与飞机构型状态定义
和生产相关的过程，从 
1995 
年开始，经历十年时间，在公司内部进行了重要而巨
大的工程重组计划，分时间阶段、按计划地从旧的
  APL  
系统转换到新的
 
DCAC/MRM  
系统，即在实现飞机产品全部数字化的基础上，建立起了一套全新
的“飞机构型定义和控制
/
制造资源管理系统”。以达到以下目标：减少问题出现
率 
50%
、缩短研制周期 
50%  
、降低成本 
25%
、极大地提高客户满意度
[11]
。通过
这一计划的真正实施，把公司内的生产制造和市场需求紧密联系并统一管理起来，
极大地提高了企业的整体经济效益和国际核心竞争力。
 
世界第二大民用飞机制造商，空中客车飞机公司是英、德、法和西班牙 
4 
个
国家为了打破美国波音公司在世界大型客机市场上的垄断地位，于 
1970 
年 
12 
月
联合组建的。为了顺应世界飞机市场的瞬息万变，满足不同客户的差异化需求，
对抗波音公司的强大竞争，空客公司组建了并行工程
  ACE  
领导小组
,  
该小组结
合公司的特点于 
1998 
年提出了空中客车技术信息系统 
ATIS(Air-Bus  Technical 
Information System)
，从而形成了一套先进的构型管理和控制技术。空客公司独具
一格的构型管理系统对飞机的寿命进行全程控制，极大程度地提高了飞机更改的
效率和系统性，并极大限度地满足了不同客户和制造商的需求
[12]
。
 
公司根据多年来实际生产的经验以及借鉴国外先进的技术，逐步形成了一套
适合于自己实际生产的构型和数字化管理机制，并应用于飞机线束生产中。该厂
以前的线束设计主要基于 
Auto CAD 
的二维设计图纸和 
Excel 
表格设计文件来完
成。这需要耗费巨大的人力成本来完成从原理图到线束分叉图的整个工艺设计过
程。以前的线束工艺数据处理平台并没有引入构型管理这一概念。不能够很好的
满足现代飞机生产制造小批量、多元化、系列化和差异化的需求。同时原来的工
艺平台也存在诸多缺陷，例如：无法对设计数据进行校验、工艺文件信息不全、
缺少更改管理等。
 
目前公司设计所采用 
CHS 
软件来设计开发飞机线束，
CHS
（
Capital  Harness 
System
）是国际著名设计软件厂商 
Mentor Graphics 
公司专为航空、航天、车辆等
领域开发的专业线束设计软件工具包，覆盖了从系统原理设计、系统框图设计到
线束设计、制造、分析的完整线缆线束工程化流程
[13]
。在当前软件的最新版本中，
CHS 
提供了强大的软件功能，可以很好的满足飞机电气系统设计和线束设计的构
型管理需求。同时 
CHS 
软件支持直接从设计文件中提取设计数据和设计规则校
验。综上所述，针对传统线束生产的固有缺陷和厂内现存的业务问题，基于 
CHS电子科技大学硕士学位论文
 
4 
设计并实现一个提供构型支持的功能完善的全数字化的线束工艺生成与管理系
统，是满足现代飞机生产复杂化、多元化和系列化的需求所必不可少的，同时也
是现代飞机电气系统线束设计与生产的趋势。
 
1.3  
研究目标与内容
 
本文从飞机线束设计与生产的业务现状出发，提出了一种基于 
CHS 
软件来提
取设计数据并进行设计规则校验的解决方案，本文的目标是在此基础上设计并实
现一个新型的全数字化的飞机线束工艺数据生成与管理系统。该系统具备以下功
能：自动提取设计数据并进行设计规则校验、管理工艺数据及生成工艺报表、管
理基础数据、管理工艺更改状态以及管理权限和日志。通过该系统能解决传统线
束工艺设计与生产方式的固有缺陷和现存的业务问题，大大提升工作效率，满足
现代飞机线束设计与生产制造的要求。
 
本论文的研究内容包括以下几点：
 
1.  
调研飞机线束设计与生产的业务现状，分析现存业务问题，在此基础上做
出需求分析，最终提出基于 
CHS 
软件来提取设计数据并校验的解决方案。
 
2.  
设计并实现 
CHS 
设计数据提取与校验子系统，主要包括：设计数据的自
动提取和导入、设计规则校验。其中设计规则校验为该子系统的关键技术部分。
设计规则校验是指：针对设计数据中存在的同一屏蔽族同一端接线中端子号不一
致、
BCK 
接线与小接头匹配不一致等问题，进行数字化的设计规则校验，提供错
误提示信息。由于设计规则校验能从根本上保证飞机线束工艺数据的准确性和一
致性，所以这一部分比较关键，同时由于线束工艺和设计规则的繁杂，这一部分
的实现也比较复杂。
 
3.  
设计并实现线束工艺数据处理平台子系统，主要包括：设计数据管理模块、
工艺数据管理模块、更改管理模块、基础数据管理模块、系统配置及维护模块。
其中工艺数据管理模块中的工艺报表生成是该子系统的关键技术部分。工艺报表
生成是指：通过对线束数据进行复杂的工艺处理和对有关工艺信息进行统计生成
指定格式的工艺报表文件以用来指导工人进行线束的生产。由于工艺报表直接用
来指导工人进行生产，所以它是本系统的关键部分。同时线束工艺的复杂性导致
了工艺报表生成算法的复杂性。
 
4.  
系统的测试及维护，主要包括对系统的功能和稳定性进行测试，以及对生
成的工艺文件中数据的准确性进行验证。再者就是系统的维护和功能的改善。
 第一章
  
绪论
 
5 
1.4  
本文结构安排
 
本论文旨在设计并实现一个基于 
CHS 
软件的飞机线束工艺数据生成与管理
系统，来满足现代飞机电气系统线束的工艺设计与生产制造。
 
本文的组织结构如下：
 
第一章
  
介绍了课题的背景、意义、现状和发展趋势，课题的研究目标和内容
以及论文的组织结构。
 
第二章
  
介绍了系统相关实现技术，并通过比较和分析对系统的架构和技术路
线做出选择。
 
第三章
  
在了解线束工艺设计与生产的业务现状的基础上，分析现存的业务问
题，提出解决思路，最后做出需求分析，包括功能需求和非功能需求。
 
第四章
  
分别介绍了系统的解决方案、运行环境、功能结构、业务数据处理流
程，并在此基础上对系统软件结构、系统关键技术和数据库设计做了说明。
 
第五章
  
介绍了系统的详细设计与实现，包括两个子系统：
CHS 
设计数据提
取与校验子系统、线束工艺数据处理平台子系统。
 
第六章
  
对系统进行测试，并对结果加以分析。测试主要包括核心模块的功能
测试，以及对生成的工艺报表文件中数据的准确性进行验证。
 
第七章
  
对本文工作进行总结，对系统的不足进行分析，对未来工作进行展望。
 
 电子科技大学硕士学位论文
 
6 
第二章
  
系统相关技术概述
 
2.1  
构型管理
 
在我们的飞机线束工艺数据生成与管理系统中将引入构型这一新的概念，下
面我们将对构型和构型管理做一下简单的介绍。
 
构型，是一种设计理念，是指在某一具体的时间里，由相关的文件所描写的
某个产品的构成状态，是飞机设计部门来确定的某一产品的特定标识，它可标识
零部件、小型组件、大型组件、部件乃至整架飞机。在空中客车项目中，飞机的
构型状态通常是通过定义文件来描写的
[14]
。而所说的定义文件，指的是确定飞机
或产品构型状态的一系列文件和资料，包括设计图纸集、技术规范和标准以及验
证要求等。构型管理，就是用一套持续的、程序化的、经济的方法对产品的状态
进行全过程的控制，从而使得制造出来的产品符合定义文件所要求的构型
[15]
。
 
构型管理的主要目的是：
 
1)  
建立产品基于构型的在管理上的统一规范和标准，争取用尽量少的部件来
产生尽量多的产品种类，建立大型而复杂产品的宏观上的完整结构
[16]
；
 
2)  
最大程度上利用当前的研究成果，减短产品的开发周期；
 
3)  
建立产品的工艺更改管理，记录产品更改执行状态，确保产品更改的历史
记录可查询可追溯
[17]
；
 
4)  
对产品构型版本进行控制，便于查询版本之间的差异。
 
2.2  
基于 
CHS 
电气系统设计平台的构型管理
 
CHS 
软件在我们的系统中将担任一个很重要的角色，构型管理和线束版本升
级基本上都是基于 
CHS 
的支持来实现的。该系统有一部分的研发任务将是基于这
个软件做的二次开发。下面将对 
CHS 
软件及基于 
CHS 
软件的构型管理作一下简
单介绍。
 
CHS
（
Capital Harness System
）是国际著名设计软件厂商 
Mentor Graphics 
公
司专为航空、航天、车辆等领域开发的专业线束设计软件工具包，覆盖了从系统
原理设计、系统框图设计到线束设计、制造、分析的完整线缆线束工程化流程
[18]
。
 
CHS 
提供了崭新的电气
/
线束设计理念，具有完善的电气设计模块，契合当前
国际各大航空、航天、车辆等企业设计理念，具有较高的定制、开发自由度。
 
在当前软件的最新版本中，
CHS 
提供了强大的软件功能，可以很好的满足飞第二章
  
系统相关技术概述 
7 
机电气系统设计和线束设计的构型管理需求。
 
在 
CHS 
设计平台中，提供全面的项目配置管理功能，用户可以项目为单位进
行管理，设定项目参数，项目在操作界面以树结构形式显示，每个项目下面可以
有多个设计，不同设计又可以包含多个原理图；在具体的每个设计当中，将不同
设计对象进行归类，这样使整个项目的结构清晰
[19]
。
 
同样，
CHS 
也提供了丰富的设计版本管理功能，每个设计都可以设定相应的
版本，将来若是需要设计变更，可以在原版本设计基础上进行版本变更并体现在
项目的树型结构下。
 
在项目配置管理功能和设计版本管理功能的基础上，
CHS 
加入了构型管理功
能，即用户可以针对每一个设计（包含原理电路图设计和线束设计）的不同版本，
设置相对应构型码和飞机的有效批架次。每一个飞机的批架次和飞机的构型码之
间存在一个相应的对应关系。
 
通过构型码和批架次参数的设定，
CHS 
软件可以自动提取出满足某一个批架
次的全机电路图或线束图的集合，并且动态维护这个集合所包含的内容。这个动
态的全机电路图或线束图集合，就是对应某一个特定飞机构型的数据集合。
 
有了这个飞机的特定构型的数据集合，我们可以方便的利用 
CHS 
平台的数据
同步功能，把多个不同构型下的电路图
(Capital  logic)
设计数据同步到全机的线束
设计
(Capital Harness XC)
中，快速高效的开展线束设计。
 
当我们在 
CHS 
设计平台中实现飞机构型管理的同时，我们也可以通过 
CHS
软件平台提供的与 
PDM 
系统之间的丰富而强大的开发接口，进行客户定制化的
二次开发，把在 
CHS 
设计平台与 
PDM 
系统有效的挂接起来，在利用 
CHS 
的构
型管理功能的同时，充分发挥 
PDM 
系统的数据管理优势，实现不同平台
/
系统之
间的数据交互和协同工作。
 
2.3 J2EE 
平台及相关技术概述
 
2.3.1 J2EE 
平台及 
MVC 
模式简介
 
J2EE 
是一整套基于 
Java 
语言的应用程序开发技术架构，它完全区别于传统
的架构。它的主要特点是跨平台、跨系统且容易部署。它包括一系列组件，主要
用来使应用系统的开发和部署变得简单和规范，进而来提升软件系统的扩展性、
可重复利用性和可移植性
[20]
。
J2EE 
的核心内容是一系列技术标准和应用指南，包
含在其内的各类部件、技术架构及及服务层次，都有统一的规范和标准，各种不
同平台之间只要按照 
J2EE 
技术来构开发，它们就具有很好的兼容性。因此 
J2EE电子科技大学硕士学位论文
 
8 
解决了以往企业内部应用系统难以兼容合并，内部与内部或者内部与外部之间难
以通信的困境
[21]
。目前 
J2EE 
实际上已经成为大多数公司开化新业务应用的行业
标准。鉴于 
J2EE 
框架的跨平台、易部署、便于维护、组件开发等诸多优点；以
及 
CHS 
软件提供基于 
JAVA 
语言的 
API 
来进行二次开发，为了达到开发语言的一
致性和统一性；我们决定采用 
J2EE 
框架来开发我们的飞机线束工艺数据生成与
管理系统
[22]
。
 
为了提高代码的可重复利用度，统一管理业务处理逻辑，更加方便规范地操
作数据库，以提升应用系统的内聚性、降低应用系统的耦合性，当前在 
Internet
或是 
Intranet 
环境中，企业级应用软件系统大多数采用三层或多层应用开发模式
[23]
。
 
J2EE 
的三层架构在业界也被大家称作 
MVC 
框架模式：
 
MVC 
框架的三层分别是指视图层 
(View) 
、模型层 
(Model) 
、控制器层
(Controller)
，它的作用是用来实现代码的低耦合和高内聚，提高应用程序的可重
复利用性和可扩展性。
MVC 
模式结构如图 
2-1 
所示。这三个部分的功能分别描述
如下：
 
(1)  
视图层
(View) 
视图层其实就是用户界面，用户可以利用它来与应用系统进行交互。从根本
上来讲，其实视图层就是以指定的格式将模型层的数据结果返回给用户。一个视
图可以关联多个模型。这样有利于代码的共享，缓和代码膨胀。一个模型也可以
关联多个视图，即以多种不同的格式给用户返回数据结果
[24]
。
 
(2)  
模型层
(Model) 
模型层表示业务数据实体和业务逻辑处理。在 
MVC 
框架模式的三个部件中，
模型层包含最多也是最复杂的数据处理，它对业务处理逻辑和规则进行封装，是
软件的关键部分。从模型层返回的数据没有固定的格式，它是独立的，因此一个
模型能对应多个视图，这样为模型层写的代码可以适用于多个视图层，因此提高
了代码的重用性
[25]
。
 
(3)  
控制器层
(Controller) 
控制器层主要起到一个中心控制并转发请求的作用，用户首先发送请求给控
制器，然后由控制器调用相应的模型和视图来完成用户的请求，控制器自己不做
任何业务逻辑处理，同时它也不输出任何结果
[26]
。它只是根据用户的请求，然后
查看配置文件以调用对应的模型进行业务逻辑处理，接着把数据结果以指定的视
图格式返回给用户。控制器层在视图层和模型层之间起到了信息交流和统一控制
的作用
[27]
。
 第二章
  
系统相关技术概述 
9 
图 
2-1 MVC 
模式结构
 
Ѷ
⌆ 贅□用目前主流的 
J2EE 
轻量级架构 
Struts2+Spring+i Batis
，基于这个组合
我们可以实现 
J2EE 
多层结构，视图层和控制器层采用 
Struts2
，业务逻辑处理层
采用 
Spring
，数据持久层采用 
i Batis
。
J2EE 
轻量级框架结构如图 
2-2 
所示。
 
2.3.2 Struts2 
相关技术概述
 
S
 
t
 
r
 
u
 
t
 
s 
是 
Ap
 
a
 
c
 
he 
软件组织主持开发的一个开源软件项目，之后有了快速的发
展和广泛的应用。
S
 
t
 
r
 
u
 
ts 
它提供了诸如控制器、
Ac
 
t
 
i
 
o
 
n 
处理以及 
J
 
S
 
P 
标签等功能。
S
 
t
 
r
 
u
 
ts2 
是 
S
 
t
 
r
 
u
 
ts 
的下一代产品，是在 
S
 
t
 
r
 
u
 
t
 
s1 
和 
W
 
e
 
b
 
W
 
o
 
r
 
k 
的基础上进行了整合与
改进的全新的 
MVC 
模式框架
[28]
。它的体系结构与 
Struts1 
的差别相当大。
S
 
t
 
r
 
u
 
ts2
以 
W
 
e
 
b
 
W
 
o
 
r
 
k 
为核心，用户的请求首先被框架的拦截器进行处理，然后进行转发。
这样的机制完全隔离了控制器与 
S
 
e
 
r
 
v
 
l
 
e
 
t  A
 
P
 
I
，所以 
S
 
t
 
r
 
u
 
ts2 
可以理解为 
Web Work
的递进和更新产品。虽然从 
Struts 1 
到 
Struts2 
有着很大的变化和差异，但是相对
于 
W
 
e
 
b
 
W
 
o
 
r
 
k
，
S
 
t
 
r
 
u
 
ts2 
的变化不大。
Struts 
和 
Web Work 
同为应用于 
Web 
的一种
MVC 
框架，从某种程度上看，
S
 
t
 
r
 
u
 
ts2 
是从 
W
 
e
 
b
 
W
 
o
 
r
 
k2 
上升级更新得到的；甚至
于 
Apache 
的官方文档也讲：
W
 
e
 
b
 
W
 
o
 
r
 
k2 
到 
Struts2 
是平滑而稳定的过渡。我们甚
至也可以说 
Struts2 
就是 
W
 
e
 
b
 
W
 
o
 
r
 
k2.3 
而已。在很多方面 
S
 
t
 
r
 
u
 
ts2 
仅仅是变换了
Web Work 
下的名称。
Struts2 
对应的有自己的标签，并且功能强大；
Web Work 
也
有自己的标签。在 
2005 
年 
12 
月，
W
 
e
 
b
 
W
 
o
 
r
 
k 
与 
S
 
t
 
r
 
u
 
ts  Ti 
决定进行合并，与此同
时，
Struts Ti  
改名为
  S
 
t
 
r
 
u
 
ts  Action  Framework  2.0
，成为 
Struts 
真正的下一代产品
[29]
。
 电子科技大学硕士学位论文
 
10 
 
图 
2-2 J2EE 
轻量级框架结构
 
Struts2 
框架的优势
: 
(1)  S
 
t
 
r
 
u
 
ts2 
框架容易上手，能很快的应用到工程中，提升开发效率，应用非
常广泛。
 
(2)  S
 
t
 
r
 
u
 
ts2 
具有很好的扩展性和开放性，本系统只采用 
S
 
t
 
r
 
u
 
ts2 
的视图层和控
制器层的功能，同时结合 
JSP 
技术和别的开源框架（
Spring 
和 
i Batis
），基于框架
组合进行开发。
 
(3)  S
 
t
 
r
 
u
 
ts2 
包含丰富的标签库，软件开发人员可以利用这些标签便捷的开发
出丰富多样的视图效果来适应不同的用户体验。
Struts2 
在权限验证和国际化方面
也提供良好的支持
[30]
。
 第二章
  
系统相关技术概述 
11 
(4) S
 
t
 
r
 
u
 
ts2 
能很好的与其他框架技术如 
Spring
、
i Batis 
等很好的整合。
 
Struts2 
的工作流程如图 
2-3 
所示：
 
2.3.3 i Batis 
相关技术概述
 
i Bat
   
i
 
s 
这个词来源于“
internet
”和“
abatis
”的组合，是一个由 
Cl
 
i
 
n
 
t
 
o
 
n B
 
e
 
g
 
i
 
n
在 
2002 
年发起的开源软件项目。于 
2010 
年 
6 
月 
16 
号被谷歌托管，改名为 
My Ba
 
tis
。它是一个基于 
SQL 
映射，支持 
Ja
 
v
 
a 
和·
N
 
E
 
T 
的半自动持久层框架；一个 
O/R 
Mapping 
解决方案。
i Bat
   
i
 
s 
最大的特征就是简单易用、上手容易。如果不需要太
多复杂的功能，
i Bat
   
i
 
s 
是能够满足你的要求又足够灵活的最简单的 
ORM 
解决方
案。
i Batis 
框架包括 
S
 
Q
 
L  
映射和 
DAO
（数据访问接口），同时还提供一个利用这
个框架开发的 
JPe
 
t St
 
o
 
r
 
e 
实例
[31]
。
 
 
图 
2-3 Struts2 
工作流程
 
相对 
Hi
 
b
 
e
 
r
 
n
 
ate 
的“一站式”全自动的 
ORM 
解决方案来说，
i Bat
   
i
 
s 
可以说是
一种“半自动化”的 
ORM 
实现。所谓的“半自动”，是相对于
"
全自动
"
的。纵观
当前流行的 
ORM 
解决方案，无论 
Hi
 
b
 
e
 
r
 
n
 
ate 
还是 
A
 
p
 
a
 
c
 
h
 
e
 
O
 
J
 
B
，都较为完整地封
装了数据库实体和结构，提供一套机制将简单 
Java 
对象（
POJO
）映射到数据库电子科技大学硕士学位论文
 
12 
二维表。开发人员一般只要配置好映射关系，就可以通过框架提供的方法完成数
据库操作，甚至可以不需要熟练掌握 
SQL 
语言
[32]
。而 
i Ba
 
t
 
i
 
s 
不同于 
Hi
 
b
 
e
 
r
 
n
 
ate 
或
是 
Apache OJ
   
B
，具体操作数据库的 
SQL 
需要开发人员自己来编写，它不会自动
生成。同时需要开发人员将 
SQL 
所需的参数以及结果字段到指定 
POJO 
的映射定
义在配置文件中。
 
i Batis 
与 
Hibernate 
相比较，它所具有的优势如下：
 
1
．
i Batis 
非常简单易学、容易上手，
Hibernate 
相对较复杂，门槛较高。
  
2
．
i Batis 
比 
Hibernate 
更灵活，适合在原有数据结构下对系统进行二次开发。
  
3
．
i Batis 
便于对 
SQL 
语句（或存储过程）做高度优化。以满足应用系统大数
据量和高性能的要求
[33]
。
 
由于我们的飞机线束工艺数据生成与管理系统有一部分是在原来的基础上进
行二次开发，同时本系统处理的数据量非常庞大，为了保证性能，我们需要对 
SQL
语句进行优化，同时还要用到大量存储过程，鉴于这两个条件，我们决定采用 
i Batis
框架来进行数据持久层的开发。
 
i Batis 
目前提供了三种语言实现的版本，包括：
Java
、
.NET 
以及 
Ruby
。
i Batis
的架构如图 
2-4 
所示。
 
2.3.4 Spring 
相关技术概述
 
为了解决企业应用系统开发的复杂性，
Rod Johnson 
创建了 
Spring 
框架。
Spring
是一个开源软件框架，
Spring 
是一个轻量级的控制反转
(IOC)
和面向切面编程
(AOP)
的容器框架。
Spring 
的轻量是从规模和代价两方面来说的。整个完整的
Spring 
框架能够在一个大小仅有 
1MB 
多的 
JAR 
文件里发布；并且 
Spring 
框架在
运行时占用的资源是很少的，只有很小的消耗
[34]
。
 
控制反转——
Spring 
是通过采用控制反转（又称为依赖注入的技术）来实现
对象之间的松耦合。控制反转（
IOC
）是指程序中一个对象对于他所依赖的其他
对象不是自己主动创建或者查找，而是通过别的非主动的方式传递过来的。一般
来讲，在对象初始化时由容器主动把对象所依赖的其他对象传递给它，而不用它
自己主动请求，所以又叫依赖注入。
 
面向切面——支持面向切面编程的框架很多，
Spring 
是其中的佼佼者，它通
过将应用系统的业务处理逻辑与系统通用服务进行分离。业务层的对象只需完成
业务逻辑处理（它们应该做的）。它们并不需要关心别的的系统级关注点，例如权
限、日志或事务支持
[35]
。
 第二章
  
系统相关技术概述 
13 
 
图 
2-4 IBATIS 
架构
 
容器——应用对象被包含在 
Spring 
中，并由 
Spring 
管理它的配置和生命周期。
  
所有 
Spring 
的这些特征使你能够编写更整洁、更可维护、更可管理、更便于
扩展、并且更易于测试的代码。它们也为 
Spring 
中的其他各种模块提供了基础支
持。
 
Spring 
框架由七个功能定义明确的模块组成，作为一个整体，这些功能模块
为开发人员提供了开发企业应用系统所需的一切。但开发人员不必将应用完全基
于 
Spring 
框架。而是可以自由灵活地挑选适合自己应用的模块而忽略掉其余的模
块。正如你所看到的，所有的 
Spring 
模块都是以核心容器为基础而构建的
[36]
。容
器定义了
Java Bean
是怎么被创建、配置和统一管理的——以及更多的
Spring
细节。
当你管理配置你的应用时，你会潜在地使用容器中的这些类。但是作为一名程序
开发者，你最可能感兴趣应该是那些影响容器所提供的服务的其它模块。这些模
块能够为你提供用于构建应用服务的框架，例如 
AOP 
和持久性。
 
Spring 
框架如图 
2-5 电子科技大学硕士学位论文
 
14 
 
图 
2-5 Spring 
框架
 
2.4  
工艺报表生成相关技术概述
 
在工艺报表的生成中，我们所做的工作是按照工艺原则和规范对工艺数据进
行处理以及对相关信息进行统计，然后生成指定格式的工艺报表以用来指导工人
进行线束的生产。报表的格式主要包括两种 
Excel 
格式的和 
XML 
格式的。鉴于这
两种格式的工艺文件，我们主要用到两种比较成熟的技术：
JXL 
和 
DOM4J
。
 
2.4.1 JXL 
技术简介
 
JXL 
是一个开源的用 
Java 
语言编写的操作 
Excel 
文件的 
API
，通过 
JXL 
用 
Java
可以很简单和方便的读写微软公司的 
Excel 
文档。它支持从 
E
 
x
 
c
 
e
 
l 95 
到 
E
 
x
 
c
 
e
 
l
 
2000
的所有版本。它支持字体字号、数字日期、边框底纹、页眉页脚、页边距等操作；
能够指定表格单元格的属性；支持图形和图像处理。一般来说以上这些功能已经
能够大体上满足我们的需要。还有重要的一点是这套 
API 
是纯 
Java 
语言编写的，
并不依赖于任何平台和操作系统，无论是在 
Windows 
下或是在 
Linux 
下，它同样
能够准确无误的处理 
Excel 
文件。另外需要补充说明的是，这套 
API 
对图形和图
表的支持非常有限，而且仅仅识别 
PNG 
格式。除了 
JXL 
之外，还有 
Apache 
组织
的一个 
POI 
项目，也可以操作 
Excel 
文件，两者相比之下，
JXL 
使用方便简单，
但功能相对 
POI 
比较弱。
POI 
使用复杂，上手慢。由于本项目主要是对文字和数
字进行处理，几乎很少涉及到图形和图像，所以为了方便和简单，在本系统中我
们决定采用 
JXL
。
 第二章
  
系统相关技术概述 
15 
2.4.2 DOM4J 
技术简介
 
DOM4J 
是一个用 
Java 
编写的适用于 
XML 
的 
API
，它类似于 
JDOM
，也是用
于读写 
XML 
文件的。
DOM4J 
具有高效率、易上手、功能强大等特点，同时它也
是一个开源软件，我们可以在 
Source Forge 
上找到它。在 
IBM 
的 
Developer Works
上面可以找到一篇这样的文章，它对主流的 
Java  XML  API 
的性能、功能和易用
性的进行了评测，
DOM4J 
无论在哪个方面都是佼佼者。现如今你可以看到愈来愈
多的 
Java 
应用软件都在使用 
DOM4J 
来读写 
XML 
文件，特别值得关注的是，就
连 
Sun 
公司的 
JAXM 
也都在使用 
DOM4J
，它是必须使用的 
Jar 
包；
Hibernate 
也
使用它来读写配置文件。本系统中我们也采用 
DOM4J 
来编写 
XML 
文件。
 
2.5  
本章小结
 
本章介绍了系统各种相关实现技术，包括构型管理、基于 
CHS 
电气系统设计
平台的构型管理、
J2EE 
平台及相关技术以及工艺报表生成相关技术，在此基础上
通过比较和分析对系统采用的架构、技术路线和相关技术做出选择。
 电子科技大学硕士学位论文
 
16 
第三章
  
系统分析
 
本系统的用户主要是飞机制造厂下属的总装厂线束工艺组的工艺员，他们利
用这个系统来完成飞机线束工艺设计和工艺数据完善，利用本系统生成的工艺报
表来指导工人进行生产。我们首先必须去到工艺组和车间，通过与工艺员和工人
的交流和沟通，了解飞机线束设计与生产的业务流程、业务现状，梳理数据流，
分析现存问题，提出解决思路，最后再做出系统的需求分析。
 
3.1 
现有业务分析
 
在现有的电缆线束设计生产模式下，首先研究所利用 
CHS 
线束设计工具完成
电路图和线束图的设计，并用奥肯思公司开发的 
Doc Gen 
工具，结合 
CER 
生成明
细表和接线表，再交由飞机制造厂工艺审核，审核通过后，研究所将明细表、接
线表和 C
AD 线
缆图纸发送到飞机制造厂，作为飞机制造厂生产电缆线束的主要依
据。 
3.1.1  
线束生产业务流程
 
线缆线束从设计到生产的全过程，按先后顺序，可分为五个阶段，即设计阶
段、工艺审查阶段、工艺计划分工阶段、工艺生产数据准备阶段和生产阶段。各
阶段主要的工作内容以及参与工作的部门如表 
3-1 
所示。
 
表 
3-1 
线缆线束从设计到生产各阶段详情
 
阶段
  
主要工作内容
  
参与工作的部门
 
设计阶段
  
线缆设计
  
设计所
 
工艺审查阶段
 
审查设计数据
 
审查工艺数据
 
数据导入厂内 
PDM 
飞机制造厂
-
制造工程部
 
飞机制造厂
-
总装工艺组
 
飞机制造厂
-
档案管理员
 
工艺计划分工阶段
 
分配工艺路线
 
制作 
PBOM 
飞机制造厂
-
制造工程部
 
工艺生产数据
 
准备阶段
 
制作工装图、制作工艺生产报表
制作工艺检测报表
 
飞机制造厂
-
总装工艺组
 
生产阶段
  
领料、线缆加工、线缆检测
  
飞机制造厂
-
工段
 第三章
  
系统分析 
17 
线束设计与生产业务流程如图 
3-1 
所示。
 
 
图 
3-1  
线束设计与生产业务流程
 
说明如下：
 

  原始 
EBOM
——指设计所完成线缆设计后，上传到设计所与飞机制造厂
联通的 
PDM 
中的 
EBOM 
结构；
 

  简单 
EBOM
——指飞机制造厂在进行工艺预审时，在原始 
EBOM 
上添加
了部分工艺路线分配信息，并在正审通过后，由档案部门导入到飞机制
造厂的 
PDM 
系统中形成的 
EBOM 
结构；
 

  工艺辅助系统——指专为总装工艺组开发的信息系统，用于处理研究所传
过来的接线表和明细表数据；
 

  CAPP——指飞机制造厂现在主要使用的工艺管理平台。
 
飞机制造厂电缆线束生产制造过程中，数据处理流程如图 
3-2 
所示。
 
3.1.2  
变更业务处理过程
 
线缆变更在 
PDM 
中由 
ECO
（设计变更单）审签流程控制，具体业务流程如
图 
3-3 
所示。
 电子科技大学硕士学位论文
 
18 
 
图 
3-2 
线束生产制造过程中数据处理示意图
 
 
图 
3-3 
线缆设计变更处理流程图
 
变更情况分为两种，一种是要求更换电缆新版本的 
ECO
，另一种是不需要更
换电缆新版本的 
ECO
。
 
对于要求更换电缆新版的 
ECO
，
ECO 
内容通常不会将新旧版本的差异写清
楚，目前将新版的电缆作为一个新的设计进行处理，工艺上重新处理数据，重新
生成新版的工艺生产报表和工艺检测报表。
 
对于不需要更换电缆新版本的 
ECO
，通常在 
ECO 
内容中会写明更改的内容，
根据 
ECO 
内容在工艺辅助系统中修改数据即可。
 
ECO 
数据处理完成后，根据电缆的交检状态安排 
ECO 
的执行。若电缆还未第三章
  
系统分析 
19 
交检，则直接根据变化的内容下发工艺更改单到工段进行更改，但对于改版的情
况，由于目前无法检查出新旧版数据的差异之处，致使 
ECO 
执行困难；若电缆已
交检，则联系调度进行处理。
ECO 
处理结果目前没有系统进行记录。
 
3.2 
现有问题分析
 
3.2.1  
现有问题
 
经过调研发现，在现有的电缆线束设计生产流程中存在诸多问题，总结起来
有如下几点：
 
1.  接线表、明细表进入飞机制造厂前可能被修改，与设计不一致；
 
2.  工艺审查采用手工模式，靠经验，问题发现率低，许多问题延迟到工艺生
产线上出现，影响了生产进度；审查完成后，对设计的修改不可控；
 
3.  EBOM 结构信息不全，成品信息查询不方便，电路图不方便查看，工艺
计划分工效率低下；
 
4.  工艺平台数据处理不灵活，而数据处理工具对报表格式要求苛刻；
 
5.  制工部与总装工艺组数据处理后，形成信息孤岛，数据不一致，难以进行
差异比较，影响生产；
 
6.  变更执行状态的反馈没有系统记录，不了解现场产品的状态。
 
3.2.2  
问题原因
 
针对现阶段飞机制造厂线束工艺设计与生产制造业务过程出现的问题，我们
分析发现，主要有以下原因导致了问题的出现：
 
1.  设计数据与工艺报表数据缺乏一致性保障；
 
2.  没有足够的设计数据用于工艺审核和数据校验，缺乏设计规则校验；
 
3.  缺乏统一的、灵活的数据处理平台；
 
4.  图纸不全或可视化功能弱；
 
5.  对于 
BOM 
缺乏智能的数据对比工具；
 
6.  缺少变更执行反馈记录机制；
 
7.  部门间的工作协同度还有提升空间。
 
3.2.3  
解决思路
 
针对上一节分析得出的结论，我们要解决问题可以从以下几个方向着手。
 
第一，直接从 
CHS 
设计文件中提取数据进行处理，不仅能保证设计与报表数电子科技大学硕士学位论文
 
20 
据的一致性；同时 
CHS 
设计文件包含的数据更丰富，有利于我们提高设计和工艺
数据校验的能力，大量减少在生产阶段出现的问题；再者 
CHS 
提供非常清晰的电
路图，可以随意放大缩小，所以同时也解决了电路图可视化的难题。因此需要设
计所提供 
CHS 
设计文件。
 
第二，要从 
CHS 
设计文件中提取数据，必须要有与设计所一致的 
CHS 
设计
工具环境。有了工具环境的支持，能直接从设计图纸生成工装图。并且利用 
CHS
工具，可进行设计规则校验和对比版本差异，从而更进一步提高数据校验和数据
差异性比较能力。
 
第三，我们需要建立一个统一的、数据处理能力强大的信息化平台——飞机
线束工艺数据处理平台，将从 
CHS 
设计文件（设计所提供）中提取的设计数据存
储到系统平台的数据库内，在平台上对数据进行统一管理。这样可避免各部门间
信息处理出现孤岛，导致在生产阶段发生数据不一致的情况，从而影响的生产进
度。同时，利用其智能化比对工具进行 
BOM 
数据比较；利用其强大的数据处理
能力进行工艺数据选配；利用其强大的数据分析和工艺处理能力来生成工艺生产
报表；利用其强大的管理能力进行工艺数据管理、工艺更改及状态管理和报表文
件管理。
 
第四，将飞机线束工艺数据处理平台与现有的 
PDM
、
CAPP 
系统进行集成，
打通数据传输通道，保证各系统间数据的一致性。
 
最后，利用现有的信息化平台建立项目管理流程，可以加强各部门间工作任
务的相互协作。
 
3.3  
系统需求分析
 
3.3.1  
功能性需求
 
根据之前的系统业务分析、系统问题分析和我们提出的解决思路，可以明确
系统应具有以下的功能需求：
 
(1)  
准确提取设计数据
 
直接从 
CHS 
设计文件中提取数据进行处理，不仅能保证设计与报表数据的一
致性，还能获取更多的数据，为工艺数据处理和工艺生产提供更大的保障。同时
利用 
CHS 
提供的缩放功能也方便解决电路图可视化的难题。
 
(2)  
设计数据校验
 
依照设计原则，对导入及转化后的电缆设计和工艺信息逐步实现自动化匹配
及校验；对检验结果生成校验报告便于工艺员查看，并根据校验结果决定是否提第三章
  
系统分析 
21 
取设计数据。
 
(3)  
设计数据管理
 
对设计数据的接线表和明细表提供查询和搜索，便于工艺员在必要的时候对
原始的设计数据进行查看。
 
(4)  
工艺数据处理及管理
 
实现线束目录管理，根据机型、有效架次提取出初始线缆目录结构（第一个
子系统生成），在此基础上提供对 
A0 
号和工艺规程等信息的添加和修改，完善线
缆目录信息；实现工艺数据选配，为单芯线、多芯线和连接器选配标签，为死接
头选配合适的牌号，为多芯线（屏蔽族）选配合适的焊锡环牌号；实现工艺报表
生成，从平台中提取相关数据，生成与生产、检测相关的工艺报表，包括如下 
14
类报表：线束目录表、标签表、标套表、导线印字表、划线表、死接头表、屏蔽
处理表、线束端子表、装配工艺规程、线束导通表、标零成材物料清单、全机端
子表、
AO 
索引表、系统导通表。
 
(5)  
工艺更改及状态管理
 
实现登记本管理，提供对设计更改单，以及设计更改相关的工艺白纸单、临
时 
A0
、工艺更改单、晒蓝单的登记管理功能；实现更改单生成，根据选定的图号、
版本、编制依据，生成更改单，对更改前和更改后生成对比记录。
 
(6)  
基础信息管理及对外接口
 
实现按图号管理与线束相关的工艺技术信息和通用数据信息；实现 
AO 
集成
共享，通过 
CAPP 
的物料清单数据导入，实现电缆工艺规程的可追溯性；实现本
系统与现有的 
PDM 
系统集成，为 
PDM 
提供原始 
PBOM 
结构与变更 
PBOM 
信息，
并提供一个可在线访问的 
URL
，保证各系统间数据的一致性。
 
(7)  
系统配置及维护
 
对系统实现文件管理、角色权限和日志操作管理。
 
 
3.3.2  
非功能性需求
 
本系统的非功能需求将从数据精度要求、灵活性、时间特性要求、数据管理
能力要求几个方面进行描述。
 
3.3.2.1  
数据精度要求
 
 电子科技大学硕士学位论文
 
22 
表 
3-2  
数据精度要求
 
数据类型
  
精度要求
 
日期格式
  
以天为单位，难以具体确定的日期可以只到月份
 
时间格式
  
以小时为单位，特殊时间应能够达到秒级
 
数字格式
  
达到千分位
 
货币
  
以元为单位，精确到分。
 
3.3.2.2  
灵活性
 
系统主要操作方式包括：人工录入数据，对于日常业务相关的数据主要通过
人工及时录入；文件导入数据，对于从其他部门和系统获取的数据，应能按照一
定格式导入。
 
3.3.2.3  
时间特性要求
 
表 
3-3  
时间特性要求
 
时间特性  要求 
用户总数  约 
150 
人，指系统中建立并可登陆访问业务系统的用户总数 
同时登陆用户数  约 
80 
人，指同时在线使用本系统的用户总数 
并发用户数  
15 
人，指在同一时刻（
1s 
之内）访问系统并执行动作的用户数 
单次操作反应时间 
不超过 
5s
，此反应时间指服务器在收到客户机发送的查询请求之后，
完全送出查询结果所需要的时间。 
汇总反应时间  不超过 
15s
，指对总数 
5000 
条数据进行统计的反应时间 
显示器分辨率 
可支持 
800*600 
及以上分辨率，推荐使用 
1024*76
8 分辨率。不传音、
视频图像 
注：正常情况指并发用户不超过峰值设计的 
70%
，服务器正常运转（不承担
其他载荷）
 
3.3.2.4  
数据管理能力要求
 
本系统需
1000G
数据库空间，对电缆设计和生产涉及的巨大数据量进行存储，
并提供对数据的查询、添加、更改、删除等功能。
 第三章
  
系统分析 
23 
3.4  
本章小结
 
本章首先从飞机线束工艺设计与生产的业务和数据流全貌、变更业务处理两
个方面来了解系统的业务现状，然后在此基础上，对现存的业务问题进行分析，
并提出解决思路。最后做出需求分析，包括功能需求和非功能需求。电子科技大学硕士学位论文
 
24 
第四章
  
系统总体设计
 
本章将在第三章需求分析基础上，根据系统的功能目标和性能目标，给出解
决当前厂内飞机线束工艺设计与生产中诸多业务问题的解决方案，从而做出系统
的总体设计。
 
4.1  
基于 
CHS 
提取设计数据并校验的解决方案
 
基于上一章节的分析，我们推荐的解决方案总体上包括表 
4-1 
所示内容。实
现此方案，会在很大的程度上提升工艺设计能力，提高生产效率。
 
表 
4-1 
分工表
 
需要完成的内容
  
备注
 
搭建与研究所相同的设计工具环境
  
已完成
 
CHS 
设计数据提取与校验子系统
  
研发
 
基于设计用 
Form Board 
制作工装图
  
购买
 
建立“线缆工艺生产项目管理流程”
  
由飞机制造厂在 
PDM 
中配置实现
飞机线束工艺数据处理平台子系统
  
研发
 
基于上面的解决方案，本课题的研发任务主要包括两个部分：
CHS 
设计数据
提取及校验子系统和飞机线束工艺数据生成与管理平台子系统。线束工艺设计与
生产的业务处理过程如图 
4-1 
所示。
 
 
图 
4-1  
线束工艺设计与生产的业务处理过程
 第四章
  
系统总体设计
 
25 
数据处理过程说明如下：
 
线缆设计过程中，在设计数据传送至飞机制造厂之前，设计要预置一个
Property 
参数，用于记录分工信息。
 
在设计数据传至飞机制造厂前，可以对设计进行 
DRC 
校验，以避免或减少
设计数据进入飞机制造厂后，仍然还存在设计层面的问题，而保证后面的生产进
度。在设计数据进入飞机制造厂前进行 
DRC 
校验，需要将 
DRC 
校验程序安装部
署在设计所的 
CHS 
设计工具环境中；
DRC 
校验也可以在设计数据进入到飞机制
造厂之后进行。此时，若检查出设计层面的问题，需要由工艺人员发解答签，走
现有的设计修改流程进行更改控制。在这种情况下，
DRC 
校验程序安装部署在飞
机制造厂的 
CHS 
设计工具环境中。
 
设计数据传至飞机制造厂后，利用本系统的 
CHS 
设计数据提取及校验子系统
的数据提取功能，将设计数据（包括工艺与分工信息）从飞机制造厂 
CHS 
设计工
具中提取并保存到 
oracle 
数据库中。
 
制造工程部可通过 
CHS 
工具或本系统的线束工艺数据处理平台子系统导出
一定数据规格的 
XML 
文件。将该 
XML 
文件导入 
PDM 
平台，可在 
PDM 
中生成
PBOM
，利用 
PDM 
现有的 
PBOM 
管理工具和规则对 
PBOM 
进行管理和维护，并
在 
PDM 
中进行发布。此功能需要通过集成本系统和 
PDM 
系统来实现。
 
总装工艺组技术工程师在飞机制造厂本系统内，可选择进行更深入的工艺规
则检查，并进行工艺选配操作。工艺数据处理完成后，利用本系统的线束工艺数
据处理平台子系统的报表生成功能，生成与工艺生产、检测相关的 
14 
张报表（详
细报表见详细设计与实现）。同时，总装工艺组技术工程师在线束工艺数据处理平
台中，可直接导出 
AO 
接口文件，用于西工大 
CAPP 
系统生成 
AO
。
 
总装工艺组技术工程师在 
CHS 
工具环境，利用 
Formboard 
生成 
1:1 
的线缆工
装图，直接用于线束生产线进行生产。
 
总装工艺组技术工程师随时可通过 
BOM 
比较工具对线束工艺数据处理平台
子系统导出的 
BOM 
数据与 
PDM 
导出的 
BOM 
数据进行比较，快速定位两个 
BOM
的不同之处。
 
总装工艺组技术工程师接到由 
PDM 
系统发出的更改通知时，在线束工艺数
据处理平台子系统中进行登记，并根据更改要求更改飞机制造厂线缆工艺设计与
生产制造管理平台内的数据，重新生成报表。线束工艺数据处理平台记录更改前
后数据，并支持历史查询。总装工艺组技术工程师根据更改要求，制定工艺更改
单，并进行发文，在系统中记录该工艺更改单的发文状态，可供查询。
 电子科技大学硕士学位论文
 
26 
4.2  
系统运行环境
 
针对电缆生产相关数据量大，计算效率要求高，要求统一管理的特点，本系
统决定采用 
B/S 
模式（浏览器
/
服务器）开发。
B/S 
模式下对客服端硬件（及浏览
器）要求不高，主要是对服务器要求比较高，需要服务器有比较好的硬件配置来
满足大数据、高性能、大存储的等要求。系统所用数据库采用支持网络访问的的
Oracle 
数据库，集中存储各类数据，各个客户端通过公司内部局域网访问数据库，
以保证数据的一致性。
Oracle 
数据库有很好的安全性和稳定性，在效率方面也有
不错的表现，正好满足本系统安全和稳定方面的要求。
 
系统服务器硬件配置如下表 
4-2 
所示
：
 
表 
4-2 
系统服务器硬件配置
 
类型
  
主要配置
  
备注
 
数据库服务器：
   
CPU  4 
核以上
  
内存
  8G 
以上
  
满足相关数据库软件要求
 
硬盘
  1000G 
以上
  
数据库要求空间
+
数据空间
 
应用服务器：
   
CPU  4 
核以上
  
内存
  8G 
以上
  
运行服务程序
 
硬盘
  500G 
以上
  
满足 
Java 
应用服务器软件要求
 
 
4.3  
系统功能结构
 
根据之前的需求分析和解决方案，我们的系统主要包括两个子系统：
CHS 
设
计数据提取及校验子系统和飞机线束工艺数据处理平台子系统。
CHS 
设计数据提
取与校验子系统主要完成设计数据的提取和校验。飞机线束工艺数据处理平台子
系统主要包括以下几个功能模块：设计数据管理模块、工艺数据管理模块、工艺
更改及状态管理模块、基础信息管理与对外接口模块以及系统配置维护模块。系
统功能结构如图 
4-2 
所示：
 第四章
  
系统总体设计
 
27 
 
图 
4-2  
系统功能结构
 
4.4  
系统业务数据处理流程
 
该系统业务数据处理流程如图 
4-3 
所示，首先将来自设计所的设计工程文件
导入到 
CHS 
软件中，经过我们的 
CHS 
设计数据提取与校验子系统（此子系统是
在 
CHS 
软件的基础上做的二次开发）的 
DRC 
校验，检验之后若是发现有问题则
生成相应的校验报告，若没有发现问题则提取 
EBOM1 
并生成 
Excel 
格式的文件，
同时提取线缆线束生产制造所需要的设计数据至 
Oracle 
数据库，在我们的另一个
子系统（线束工艺数据处理平台子系统）中将对提取到数据库的这些数据进行处
理，主要包括：设计数据管理、工艺数据管理、接口文件生成、更管管理、基础
信息管理等，最后我们将通过接口文件与外部的 
CAPP 
系统和 
PDM 
系统进行集
成和联通。
 
 
图 
4-3  
系统业务数据处理
 电子科技大学硕士学位论文
 
28 
4.5  
系统软件的总体设计
 
4.5.1  
系统软件结构
 
本系统由两个子系统组成：
CHS 
设计数据提取与校验子系统和飞机线束工艺
数据处理平台子系统。两个子系统之间通过 
Oracle 
数据库进行联通。系统总体结
构如图 
4-4 
所示：
 
 
图 
4-4  
系统总体结构
 
下面将分别介绍两个子系统的软件结构。
 
1. CHS 
设计数据提取与校验子系统软件结构
 
CHS 
设计数据提取与校验子系统是在 
CHS 
软件的基础上做的二次开发，它
基于 
CHS 
工具的 
Plugin 
开发功能来实现，该功能需要 
Capital  Integration  Server
模块的支持（
Capital Integration Serve 
是 
CHS 
工具一个模块，是 
CHS 
的二次开发
的支持模块），采用 
java 
语言开发，主要采用了 
CHS API 
和 
SWT/SWING
，其中
CHS API 
提供了在 
CHS 
工具中提取设计数据的接口，在提取数据时，我们将按照
飞机线缆线束的设计原则和规范对设计数据进行校验，以保证设计数据的一致性
和准确性。
 
该子系统主要包括两类插件的开发：
Action 
插件和 
DRC 
插件。下面分别对
这两类插件做出介绍。
 
Action 
插件需要继承 
CHS API 
中的 
IXHarness Action 
或 
IXLogic Action 
接口，
这样我们才能提取线束图、电路图中的设计数据。插件中采用 
JDBC 
连接 
oracle
数据库，将提取的目录结构表、接线表、用料表导入数据库中存储。
 
DRC 
插件需要继承 
CHS API 
中的 
IXHarness DRCheck 
接口，这样我们才能访第四章
  
系统总体设计
 
29 
问线束图中的设计数据进行规则校验。插件通过 
JXL 
库读取 
excel 
格式的规则，
进行各项校验。规则以 
excel 
形式存放，旨在结构明了、扩展性好。若存在违背
规则的数据，则统一以 
txt 
格式输出校验结果。
 
该系统的软件结构如图 
4-5 
所示：
 
 
图 
4-5 CHS 
设计数据提取与校验子系统软件结构
 
2.  
线束工艺数据处理平台子系统软件结构
 
飞机线束工艺数据处理平台子系统基于 
J2EE 
体系，采用 
B/S 
架构，采用
Apache Tomcat 
作为应用服务器软件，采用 
Oracle 11g 
作为数据库管理软件。系统
采用基于 
MVC 
模式
(Model-View-Controller)
的模型层、视图层和控制器层的三层
软件结构，提高了系统的灵活性、可扩展性、可管理性，并且降低了系统各层之
间的耦合性。
 
在具体实现中，我们的飞机线束工艺数据处理平台子系统是采用 
Struts2  + 
Spring + i Batis 
来实现 
J2EE 
轻量级多层架构的，
Struts2 
用于视图层、控制层，
Spring
用于业务逻辑处理层，而 
i Batis 
则用于数据持久层。
 
由于 
MVC 
模式实现了模型、视图、控制器的分离，并强调模块化、低耦合
性，使得系统具有更大的灵活性、重用性和扩展性。因此，将 
MVC 
模式应用到
一个系统设计的过程中，就是对系统不同责任的划分过程，将系统需求进一步分
解、抽象、聚合，以形成不同层次、不同功能的功能单元及其聚集体。本系统的
设计，借鉴和应用了 
MVC 
模式的上述优点和设计过程，将整个系统架构分成表
现层、逻辑控制及业务处理层和数据持久层三层结构。具体的结构如图 
4-6 
所示：
 
(1)  
表现层（采用 
Struts2 
框架以及 
JQuery 
技术）
 
通过详细信息、表格、结构树等多种形式显示数据模型的相关数据，使用户
能够更好地理解掌握所需数据和信息；明确表示用户可以发出的请求和操作，并电子科技大学硕士学位论文
 
30 
将用户的操作、请求发送到逻辑控制层。
 
 
图 
4-6  
线束工艺数据处理平台子系统软件结构
 
(2)  
逻辑控制及业务处理层（采用 
Struts2 
和 
Spring 
框架）
 
构建系统所需的各个功能——定义应用系统的行为；将用户的请求和操作，
映射到数据模型的更新中；选择相应的视图作为对用户请求的回应。
 

  逻辑控制：
 
   
实现符合用户业务逻辑的操作流程和界面转换。
 

  状态控制：
 
   
实现对需要进行归零控制的表单、状态监控与归零处理。
 

  数据绑定：
 
   
实现数据模型层与表现层的数据同步。
 

  DAO：
 
   
实现数据的从数据库数据到数据模型对象的映射，以及更新、保存、
     
添加、删除等数据库操作的执行。
 

  查询：
 
   
实现对所有数据及其字段的查询功能，以及查询结果的 
Excel 
格式导
    
出。
 第四章
  
系统总体设计
 
31 

  报表：
 
   
实现支持 
Excel 
格式的报表生成及导出功能。
 
(3)  
数据持久层（采用 
IBATIS 
框架）
 
回应对数据的查询和显示要求；将数据状态的变化通知视图；包装应用程序
的状态。
 

  数据模型
 
   
数据模型用来表示系统中的业务数据。一个模型可以给多个表现层视
    
图提供数据支持，因此，提高了系统的重用性。
 

  ORM 
   ORM 
是通过使用描述对象和数据库之间映射的元数据，将 
java 
程序
 
    
中的对象自动持久化到关系数据库中。
 
4.5.2  
系统关键技术
 
1.  
设计规则校验
 
针对设计给出的数据中存在同一屏蔽族同一端接线中端子号不一致、
BCK 
接
线与小接头不匹配、电线空端子等问题，在 
CHS 
上进行二次开发实现设计端和生
产端均可进行的智能化设计规则校验。设计规则校验结果提供错误提示信息，并
生成相应的校验报告。此外，为使校验信息具有可拓展性，提供 
Excel 
格式的与
DRC 
校验相关的基础信息维护接口。
DRC
（设计规则检查）包括屏蔽族端子一致
性校验、接线关系校验、死接头连线校验、插头壳体号校验、电线两端校验等。
 
这里以屏蔽族端子一致性校验为例进行说明，它是检查同一屏蔽族同一端接
线中，端子号不一致的情况。工艺员在 
CHS 
中选择需要校验的图纸，检查由程序
自动完成，并给出结果报告。根据 
CHS 
提供的 
API
，获取图纸中所有屏蔽家族，
再针对每一个屏蔽家族进行检查，统计每个家族中电线两端压接的端子。在统计
端子时，获取电线末端的针孔，进而获取端子，若端子类型是插头、插座或后附
件，则其为一个有效的端子，加入端子集合；若端子类型是死接头，则需要进一
步寻找其所属端子。如图 
4-7 
所示，屏蔽族 
MC11 
有 
3 
根电线 
WIRE1
、
WIRE2
、
WIRE3
，在统计过程中 
WIRE1
、
WIRE2 
的两端是 
11DES
、
12DES
，是有效端子，
WIRE3 
的一端是 
11DES
，另一端是死接头 
SP1
，这时就需要进一步寻找 
SP1 
的所
属端子（距离 
SP1 
最近的端子），即 
13DES
。因此最后的结果端子集合中有三个
端子 
11DES
、
12DES
、
13DES
，正常情况下是 
2 
个，所以要给出警告提示。
 
 电子科技大学硕士学位论文
 
32 
 
图 
4-7  
屏蔽族端子一致性校验 
接线关系校验、死接头连线校验、插头壳体号校验等校验与屏蔽族端子一致
性校验类似，根据 
CHS 
提供的 
API 
获取并比对规则。关于设计规则的具体实现
请参见本文第五章系统详细设计与实现中的 
5.1.2 
设计规则检验。
 
2  
工艺报表生成
 
工艺报表是线束生产制造中信息处理和传递的载体，是指导工人具体操作最
关键的文档。该系统将工艺规则转化为计算机内部算法，而工艺规则的复杂性必
然引起算法的复杂性，特别是某些电线牌号或处理方式更需要特殊的处理。下面
以系统导通表为例进行说明。
 
系统导通表用于全机电路导通测试，在 
CHS 
中提取出符合某批架次的所有电
路图中的接线关系，经过一定的工艺规则处理生成。生成系统导通表需要遵循以
下原则：①无冗余导通记录。对于图 4-8 中所示记录，只需要测试 CON_A-CON_B、
CON_C-CON_B 或 CON_A-CON_C、CON_A-CON_B 或 CON_B-CON_C、CON_A-CON_C 其中
一组即可。②消除所有的死接头。如图 4-9 所示，其中 SP 是死接头，3 根接线关
系如表 4-3 所示，任意选择一个与死接头 SP 相连的端子/针孔，如 CON_B/2，替
换表 1 中的死接头 SP，替换结果如表 4-4 所示。移除第三条接线 WIRE3，与①类
似它是多余的，结果如表 4-5 所示。③链接 n TEA/n TEB、n HIP/n HPI 类端子。如表
4-6 所示，第 1、2 条记录中的 11HIP/1 与 11HPI/1 配对（n、针孔相等），第 3、4
条记录中的 12TEA/2、12TEB/2 配对，配对链接后的结果如表 4-7 所示。④链接共
享线。共享线即连接两个电路图的线，在两个电路图中都会出现，因此在全机电
路图中会出现 2 次，它们的特征是一端为空，将线号相同的记录合并即可。⑤按
照一定顺序排列。 第四章
  
系统总体设计
 
33 
 
图 
4-8  
无冗余导通示意图
 
 
图 
4-9  
死接头接线示意图
 
 
表 
4-3  
初始死接头接线关系
 
来向
  
针孔
  
线号
  
去向
  
针孔
  
所经端子
  
所经线号
 
CON_A  1  WIRE1  SP  L   
SP  R  WIRE2  CON_B  1   
SP  R  WIRE3  CON_B  2   
表 
4-4  
消除死接头后的接线关系
 
来向
  
针孔
  
线号
  
去向
  
针孔
  
所经端子
  
所经线号
 
CON_A  1  WIRE1  CON_B  2  SP  WIRE3 
CON_B  2  WIRE2  CON_B  1  SP  WIRE3 
CON_B  2  WIRE3  CON_B  2  SP  WIRE3 
表 
4-5  
消除来向
/
针孔与去向
/
针孔都向相同的记录
 
来向
  
针孔
  
线号
  
去向
  
针孔
  
所经端子
  
所经线号
 
CON_A  1  WIRE1  CON_B  2  SP  WIRE3 
CON_B  2  WIRE2  CON_B  1  SP  WIRE3 电子科技大学硕士学位论文
 
34 
 
表 
4-6  
初始接线关系
 
来向
  
针孔
  
线号
  
去向
  
针孔
  
所经端子
  
所经线号
 
11
HIP
  1  WIRE1  CON_A  2   
11
HPI
  1  WIRE2  CON_B  1   
12
TE
B  2  WIRE3  CON_B  2   
CON_C  3  WIRE4  12
TE
A  2   
表 
4-7 
合并 
HIP/HPI
、
TEA/TEB 
后的接线关系
 
来向
  
针孔
  
线号
  
去向
  
针孔
  
所经端子
  
所经线号
 
CON_B  1  WIRE1  CON_A  2  11
HPI、
11
HIP
  WIRE2 
CON_C  3  WIRE3  CON_B  2  12
TE
A
、
12
TE
B  WIRE4 
4.6  
数据库设计
 
通过 
CHS 
设计数据提取和校验子系统，我们从 
CHS 
设计文件中提取接线表
和明细表到数据库，对应在数据库中我们需要建立接线表
_init 
和明细表
_init 
来存
储对应的数据。这部分我们叫做设计数据。同时我们抽取线束号及相关信息生成
线缆目录表以供后续用作索引、划分 
AO 
使用。由于设计数据不允许修改，我们
将设计数据进行复制作为原始的工艺数据，对应在数据库中的表格为接线表
_modi 
和明细表
_modi
。工艺数据是我们的系统进行数据处理的原始数据。由于需
要对接线表和明细表的修改痕迹进行记录，以便于以后对误操作进行修复，我们
设计了接线表更改记录表和明细表更改记录表对相关的修改进行备份。接线表、
明细表、线缆目录表、接线表更改记录表和明细表更改记录表这五个表格是该系
统的核心数据，它们之间的 
E-R 
关系如图 
4-10 
所示。
 
为了进行工艺选配和基础信息维护，我们设计了死接头信息表、焊锡环选配
规则表、死接头选配规则表、电线 
CMA 
表。为了进行更改及状态管理我们设计
了登记本表。
 
在系统配置及维护模块为了进行日志操作和角色权限控制等，我们设计了操
作日志表、人员信息表、部门信息表、用户信息表。
 
为了实现各个模块的功能，通过对业务逻辑的封装，本系统数据库主要建立
了以下 
20 
类表格，各表格的详细说明如表 
4-8 
所示。
 第四章
  
系统总体设计
 
35 
 
图 
4-10  
数据库核心表格 
E-R 
图
 
表 
4-8  
数据库表描述
 
  
表名
  
描述
  
说明
 
1  TDirectory_AO  
线缆目录结构表
 
图纸目录规划表，记录机型、有效架次
等信息
 
2  TWire1_init  
接线表 
1  
原始的接线关系表，一根线只出现一次
3  Twire2_init  
接线表 
2 
原始的接线关系表，一根线可能出现两
次
 
4  Twire1_modi  
接线表 
1  
工艺接线关系表，一根线只出现一次
 
5  Twire2_modi  
接线表 
2  
工艺接线关系表，一根线可能出现两次
6  Twire1_modi_history  
接线表 
1 
更改记录表 工艺接线关系表的历史更改记录
 
7  TEbom1  
明细表 
1  
明细表 
1
，记录用料、成品父图等信息
8  TEbom2_init  
明细表 
2  
原始明细表 
2
，记录用料情况
 
9  TEbom2_modi  
明细表 
2  
工艺明细表 
2
，记录用料情况
 电子科技大学硕士学位论文
 
36 
10  TEbom2_modi_history  
明细表 
2 
更改记录表 工艺明细表 
2 
的历史更改记录
 
11  TSplice_info  
死接头信息表
 
包含死接头的所属端子、选配成功后的
牌号等信息
 
12  TDepartment_info  
部门信息表
  
人员所属部门的详细信息
 
13  TStaff_info  
人员信息表
  
用户关联到的人员详细信息
 
14  TUser  
用户信息表
  
系统登录用户的详细信息
 
15  TLog  
操作日志表
  
用户在系统中的操作行为记录
 
16  TSolder_ring  
焊锡环选配规则表
  
焊锡环的选配规则信息
 
17  TTag  
标签选配规则表
  
标签选配规则信息
 
18  TSplice  
死接头选配规则表
  
死接头选配规则信息
 
19  TWire_cma  
电线 
CMA 
表
  
记录不同线规的 
CMA 
面积
 
20  TRegister  
登记本表
 
用户进行艺数据更改时先在此表登记，
记录基本的更改依据、图号等信息
 
4.7  
本章小结
 
本章在第三章系统分析的基础上，首先提出了该系统的解决方案，然后给出
了推荐的系统运行的软硬件环境，分析系统的业务数据处理流程。最后做出系统
软件的总体设计和数据库设计，总体设计包括系统的总体结构和两个子系统的软
件结构。第五章
  
系统详细设计与实现
 
37 
第五章
  
系统详细设计与实现
 
本章将在第四章系统总体设计的基础上，分模块地深入描述各个部分具体的
实现及关键数据结构与代码，本系统包括设计数据提取及校验和线束工艺数据处
理平台两个子系统。其中设计数据提取和校验子系统是在 
CHS 
软件上做二次开
发，
CHS 
提供基于 
Java 
语言的 
API
，我们就是利用这些 
API 
采用 
Java 
语言来开
发此子系统的，它主要包括设计设计的提取和校验。线束工艺数据处理平台子系
统，我们采用 
B/S 
架构，基于 
J2EE 
来开发。它主要用于工艺数据的处理和管理，
由于此平台功能模块众多，此章节只对它的核心功能模块进行详细设计与实现的
说明，其他模块只作概述。它的核心模块包括工艺数据管理模块和工艺更改及状
态管理模块。其中最核心的是工艺数据管理模块中的工艺报表生成，这些工艺报
表将直接指导工人进行生产。
 
5.1 CHS 
设计数据提取及校验子系统的详细设计与实现
 
CHS 
设计数据提取及校验子系统主要实现设计数据的提取和校验，设计数据
提取包括接线表和明细表的提取以及线缆目录表的生成。将设计单位所给出的设
计数据原始工程文件导入 
CHS 
软件
,
再通过 
CHS 
插件进行 
DRC 
校验，然后导入
数据库中，以此作为电缆工艺数据基础。其中 
DRC 
校验对不符合设计原则和生
产要求的设计数据生成结果报告，由工艺人员进行修正处理或通知设计所更改，
以保证设计数据的正确性。
 
设计数据的业务流程如图 
5-1 
所示：
 
 
图 
5-1  
设计数据业务流程图
 
5.1.1  
设计数据提取模块
 
设计数据提取模块（程序中称为 
Action 
插件）的功能是从设计文件中提取线电子科技大学硕士学位论文
 
38 
缆目录结构表、接线表、明细表。此外，在正式提取数据前需要展示当前工程的
文件目录，让用户可以有选择性的提取指定图纸相关数据到数据库。
 
5.1.1.1  
线缆目录结构表的提取
 
线缆目录结构表的提取是指提取图纸的信息到数据库中的线缆目录结构表，
主要包括机型（工程名）、起始架次、终止架次、图号、版本、构型码、名称、主
管设计等。
 
获取目录结构表的步骤如下：
 
1
、获取系统中所有的 
buildlist 
列表并显示在用户图形界面中
 
2
、用户选择 
buildlist
，填写机型，点击提交
 
3
、获取所选择的 
buildlist 
中所有的图纸，并存放在 
list 
中
 
4
、从 
list 
中取出一个图纸，取得它的图号、版本
 
5
、检测数据库中是否存在该图号版本的目录，若存在，则提示是否覆盖；若
不存在，获取有效架次、名称等其他信息直接添加
 
6
、跳到 
4
，若全部已遍历完，则结束
 
程序流程如图 
5-2 
所示
 
 
图 
5-2 
线缆目录结构表生成流程图
 第五章
  
系统详细设计与实现
 
39 
5.1.1.2  
接线表 
1 
的提取
 
接线表中信息是描述每根导线的属性以及它和其他导线之间的联系的，它是
一个二维表格，表格的每一条记录描述这个图号中的一条导线。我们程序中将对
每个图纸中直接获取 
wire 
进行提取，每根导线的属性包括导线来、去向，牌号、
线号、线规、颜色、后缀、长度等信息，提取完成后我们将数据存储到数据库。
 
程序流程如图 
5-3 
所示。
 
 
图 
5-3 
接线表 
1 
生成流程
 
关键代码如下：
 
函数名：
public void get Wire Detia( ) 
输入：
Set <IXWire>          ixws       //
电线集
 电子科技大学硕士学位论文
 
40 
     List <Wire Info>          data   //
电线详细情况（包含电线属性）
 
       Map <String, String>      wire Logic Map //
电线
-
电路图关系
   
函数功能：将电线集中的所有电线信息提取到 
data 
集合中
 
public void get Wire Detial(Set<IXWire> ixws, List<Wire Info> data, Map<String, 
String> wire Logic Map){ 
   for(IXWire wire : ixws)//
遍历整个集合
{ 
     if(wire != null)//wire 
不为空对象时
{ 
     //
获取电线各种属性
 
       Wire Info wire Info = new Wire Info();//
新建一个电线对象
 
       wire Info.set Diag Id_vers(this.diagram Name Version);//
图号
_
版本
 
       wire Info.set Name(name);//
线号
 
       this.get Wire Ends Detail(wire, wire Info);//
获取来向、针孔
   
去向、针孔
  
     if(name.starts With("SH")&&wire Info.get From_conn().starts With("S")&&  
       !wire Info.get To_conn().equals("")) 
       {......//  
来向是死接头，去向是非空需要做特殊处理
} 
      ......//
其他情况的特殊处理
 
       wire Info.set Spec(wire.get Attribute("Wire Spec"));//
线规
 
       String Logic Name = wire Logic Map.get(wire.get Attribute("Name")); 
       wire Info.set Logic_name(Logic Name);//
电路图
 
       ......//
获取电线的其他属性，例如：后缀、颜色、屏蔽族、长度等
 
       data.add(wire Info);//
将电线对象加入 
data 
集合
 
}}} 
在从 
ixws 
电线集获取电线属性到 
data 
集合中的时候，有三种情况需要特殊
处理：
 

  电线来向是死接头，去向是非空；
 

  电线去向是死接头，来向非空；
 

  如果电线是 
SH 
线，且来向端子或去向端子为空，需要将其芯线的端
子值赋给它填充。
 
其他情况下都是按正常流程处理。
 
5.1.1.4  
接线表 
2 
的提取
 
在每个图纸中，以连接器、死接头、后附件、接线柄为来向端子提取接线关
系，包括导线来、去向，牌号、线号、线规、颜色、后缀、长度等信息，然后将第五章
  
系统详细设计与实现
 
41 
数据存储到数据库。一根线可能出现 
2 
次。
 
程序设计流程如图 
5-4 
所示。
 
 
图 
5-4 
接线表 
2 
生成流程
 
5.1.1.5 EBOM1 
的提取
 
在每个图纸中，提取装配图号名称、零件编号、零件名称、数量、成品图号、
成品名称、成品父图号等信息，生成 
EBOM1 
的 
Excel 
表格。
EBOM1 
主要用于电电子科技大学硕士学位论文
 
42 
缆设计与生产中的预分工，将任务非配到厂内的各个车间和部门。
 
程序流程如图 
5-5 
所示。
 
 
图 
5-5 EBOM1 
生成流程
 
5.1.1.6 EBOM2 
的提取
 
在每个图纸中，获取插头、后附件、电线接头、标记套、电线、电缆等信息，
生成 
EBOM2
，并存储到平台的数据库。
EBOM2 
包含线缆生产用料的明细，主要
作用是通告专管材料的部门这个图纸各种用料的耗费是多少，便于预先生产各类
用料，以保证用料的供给和充足。同时 
EBOM2 
中的各种信息可以用于生成各类
工艺报表，比如：标零成材物料清单表，装配工艺规程表、线束表套表等
 
程序详细流程如图 
5-6 
所示。
 
关键代码如下：
 
函数名称：
  private   void   extract EBOM2From Wires( ) 
输入：
Set <IXWire>      ixws                //
电线集
 
     List<Ebom2>      data                //EBOM2 
信息集
 
       String           diagram Name Version   //
装配图号（线束图名）
 第五章
  
系统详细设计与实现
 
43 
功能：将所有电线的 
EBOM2 
信息提取到 
data 
集合中。
 
private  void  extract EBOM2From Wires(Set<IXWire>  ixws,  List<Ebom2>  data, 
String diagram Name Version){ 
   for(IXWire ixw : ixws){//
遍历整个电线集
 
     Ebom2 ebom2 = new Ebom2(); 
     ebom2.set Name("
电线
");//
名称
 
     ebom2.set Diag Id_vers(diagram Name Version);//
装配图号
_
版本
 
     ......//
提取名称、零件号、设计名称、长度、单位、重量、等信息。
 
     ebom2.set Ao_type("3");//AO 
分类，不印字导线为 
3   
印字导线为 
2  
   if(chs Utils.is Mark Wire(part Number, output Window)) 
         ebom2.set Ao_type("2");  
     //
印字的“电线牌号”有两种：“
SMLH??-9
”“
SMLG??-9
”
,??
是指“线
规”
 
     ebom2.set Type_mark("3");//
类型标识，
3 
表示电线。
 
     data.add(ebom2);//
将 
ebom2 
加入 
data 
集合
 
}}//
函数结束
 
 
 
图 
5-6 EBOM2 
生成流程
 电子科技大学硕士学位论文
 
44 
在提取 
Ebom2 
各类信息的时候，若已提取屏蔽族则该芯线不再提取；若牌号
为空或者线号为空则不再提取；若 
data 
集合中已存在相同牌号，则合并数量
/
长度。
 
5.1.2  
设计规则校验模块
 
针对设计给出的数据中存在同一屏蔽族同一端接线中端子号不一致、连接器
壳体号与后附件壳体号匹配错误、
BCK 
接线与小接头匹配、电线空端子等问题，
在 
CHS 
开发插件实现设计端和生产端均可进行的工艺数据智能校验，并提供错误
提示信息，生成相应的校验报告以便于及时采取措施。此外，为使校验信息具有
可拓展性，提供 
Excel 
格式的与 
DRC 
校验相关的基础信息维护接口。
 
DRC
（设计规则检查）包括屏蔽族端子一致性校验、接线关系校验、死接头
连线校验、
BCK 
与小接头校验、后附件屏蔽套校验、插头壳体号校验、电线牌号
和长度校验、
SH 
空端子校验等等。
 
DRC 
校验流程如图 
5-7 
所示。
 
 
图 
5-7 DRC 
校验流程图
 第五章
  
系统详细设计与实现
 
45 

  屏蔽族端子一致性校验：校验同一屏蔽族同一端接线中，端子号不一致的
情况，给出提示。
 

  接线关系校验：校验 
1 
孔双线或 
1 
孔多线的情况（死接头 
SXXX 
的情况、
BCK 
孔和
  SHXX 
线除外）。
 

  死接头连线校验：校验 
SXXX 
死接头两端均为相同线规的单线情况。
 

  BCK 与小接头校验：校验插头中有 
BCK 
接线，图纸中未配小接头；或图
纸中有配小接头而插头中无 
BCK 
接线的情况。
 

  后附件屏蔽套校验：校验 
HD-  
系列后附件需配屏蔽套要求，不满足的给
出提示。
 

  后附件模缩套校验：校验 
HAI-
系列后附件需要配模缩套，不满足的给出
提示。
 

  插头壳体号校验：校验插头壳体号与后附件壳体号不匹配的情况。
 

  电线牌号和长度校验：校验电线牌号为空或电线长度不大于 
0 
的情况。
 

  SH 空端子校验：校验 
SH 
屏蔽线两端没有端接任何端子的情况，给出提
示。
 
此外，为使校验信息具有可拓展性，提供 
Excel 
格式的与 
DRC 
校验相关的基
础信息表格，以供后续拓展和维护，包括的校验基础信息有：
 

  后附件适配配屏蔽套：记录与给中规格的后附件相适配的屏蔽套规格。
 

  壳体号信息：记录给类插头和后附件壳体号的起始位数。
 

  后附件壳体号：记录与插头适配的后附件壳体号
 
5.1.2.1  
屏蔽族端子一致性校验
 
屏蔽族端子一致性校验是检查同一屏蔽族同一端接线中，端子号不一致的情
况。一致性校验由程序自动完成，并给出校验报告。根据 
CHS 
提供的 
API
，获取
图纸中所有屏蔽家族，再针对每一个屏蔽家族进行检查，统计每个家族中电线两
端压接的端子。
 
程序流程如图 
5-8 
所示。
 
关键代码如下：
 
函数名称
  public void check( ) 
输入对象说明：
 
IXDRCViolation Reporter      reporter      //CHS 
内置的报告输出对象
 
IXObject                   ixo          //
将要校验的对象
 
 电子科技大学硕士学位论文
 
46 
 
图 
5-8  
屏蔽族端子一致性校验流程
 
功能：校验同一屏蔽族同一端接线中，端子号不一致的情况
 
public void check(IXDRCViolation Reporter reporter, IXObject ixo) { 
   if(ixo   instanceof   IXMulticore){//
如果是屏蔽族对象的实例
 
       IXMulticore ixm =(IXMulticore) ixo;//
强制转换为屏蔽族对象
 
       List<String>  conns  =new  Array List<String>();//
新建一个 
List 
来容器来
放置同一屏蔽族中的端子
 
       Set<IXAbstract Conductor>  ixacs  =ixm.get Conductors();//
获取屏蔽族中
所有的接线
 
       if(ixacs!=null && ixacs.size()>1){ 
         for(IXAbstract Conductor ixac :ixacs)//
遍历同一屏蔽族中所有的接线
 
         {...... //
统计屏蔽族里所有的芯线共有多少端子
} 第五章
  
系统详细设计与实现
 
47 
         if(conns.size()>2) {//
如果端子数目大于 
2 
            reporter.report(IXDRCheck.Severity.Warning,  "
屏蔽族：
{0}  
出现
同
 
            
一端接线中端子号不一致
", ixm);//
输出校验报告
 
} }} } 
5.1.2.2  
接线关系校验
 
接线关系校验用来校验 
1 
孔双线或 
1 
孔多线的情况（死接头 
SXXX 
的情况、
BCK 
孔和
  SHXX 
线除外）。
 
程序逻辑如图 
5-9 
所示。
 
 
图 
5-9  
接线关系校验流程
 电子科技大学硕士学位论文
 
48 
死接头连线校验、
BCK 
与小接头校验、后附件屏蔽套校验、插头壳体号校验、
电线牌号和长度校验、
SH 
空端子校验与屏蔽族端子一致性校验类似，根据 
CHS
提供的 
API 
获取并比对校验规则，根据比对结果生成校验报告。
 
5.2  
线束工艺数据处理平台子系统的详细设计与实现
 
线束工艺数据处理平台主要包括五个模块：设计数据管理模块、工艺数据管
理的模块、工艺更改及状态管理模块、基础信息管理及对外接口模块、系统配置
及维护模块。该工艺处理平台主要用来对工艺数据进行处理，生成各类工艺报表
指导车间的工人进行生产，以及对工段进行分工、基础信息维护、工艺更改状态
管理及反馈、与外部的 
CAPP 
系统和 
PDM 
系统进行集成等。
 
飞机线束工艺数据处理平台子系统基于 
J2EE 
体系，采用 
B/S 
架构，使用
Apache Tomcat 
作为应用服务器软件、采用 
Oracle 11g 
作为数据库管理软件，采用
基于 
MVC 
模式
(Model-View-Controller)
的模型层、视图层和控制器层的三层架构，
提高了系统的灵活性、可扩展性、可管理性，并且降低了系统各层之间的耦合性。
 
在具体实现中，我们的飞机线束工艺数据处理平台子系统采用的是 
Struts2 + 
Spring + i Batis 
来实现 
J2EE 
轻量级多层架构的，
Struts2 
用于视图层、控制层，
Spring
用于业务逻辑处理层，而 
i Batis 
则用于数据持久层。
 
在这里我主要详细介绍一下 
Struts2
、
Spring 
和 
i Batis 
三大框架的整合，以及
数据库连接池的配置和初始化。
 
(1)  
配置 
web.xml  
，
web.xml 
文件是 
WEB 
程序用来初始化配置信息的，此处
我们主要对 
Struts2 
的过滤器和 
Spring 
的监听器进行配置。
 
配置 
Struts2 
过滤器
 
<fil
 
ter> 
  <filter-name>str
 
uts2</filter-name> 
  <!--  
这个就是 
struts2 
的核心过滤器
  --> 
  <filt
 
er-class> 
     or
 
g.ap
 
a
 
c
 
h
 
e.str
 
uts2.disp
 
atcher.Fil
 
ter Dispatcher 
 
   </filt
 
er-class> 
</fil
 
ter> 
<fil
 
ter-map
 
ping> 
    <!--  
配置过滤器映射
  "/*"
表示过滤器对所有文件进行过滤
  --> 
    <filter-name>struts2</filter-name> 
    <url-pattern>/*</url-pattern> 第五章
  
系统详细设计与实现
 
49 
</fil
 
ter-map
 
ping> 
 
配置 
Spring 
监听器
 
<lis
 
te
 
ner> 
     <!--  
这个就是后面将用到的 
Web Application Util Content --> 
     <liste
 
ner-cl
 
ass> 
   org.spr
 
ingfra
 
mewo
 
rk.web.con
 
text.Cont
 
ext Loader L
 
is
 
tener 
     </liste
 
ner-cl
 
ass> 
</lis
 
te
 
ner> 
(2)  
配置 
Spring 
的 
application Context.xml 
文件
 
配置数据源，这里我们采用 
Apache 
的 
DBCP 
数据源
 
<bean id="data
 
Sou
 
rce" cla
 
ss="org.ap
 
ac
 
he.com
 
m
 
ons.db
 
cp.Ba
 
sic Data Source" 
 
destroy-method="clo
 
se"> 
<!--  
配置数据库驱动程序
  --> 
   <p
 
ro
 
p
 
e
 
r
 
t
 
y   n
 
a
 
me="driv
 
er
 
Class
 
N
 
ame"> 
     <value>orac
 
le.jd
 
bc.d
 
river.O
 
rac
 
le Dri
   
ver</value> 
   </p
  
ro
 
p
 
e
 
r
 
t
 
y> 
<!--  
配置数据库服务器的 
IP 
的数据库的 
SID --> 
   <pro
 
perty name="url"> 
     <value>jdbc:oracle:thin:@192.168.1.249:1521:czj</value> 
   </pro
 
perty> 
<!--  
配置数据库服务器的用户名
--> 
   <property   name="username"   value="admin"/> 
  <!--  
配置数据库服务器的密码
--> 
   <property name="password" value = "123456"/> 
<!--  
配置数据库连接处的最大活跃数
--> 
   <property name="max Active" value="64"/> 
</bean> 
 
配置 
i Batis 
的 
sql Map Client 
对象
,  sql Map Client 
对象是 
i Batis 
中统一管理数据
操作的对象。
 
<bean    id="sql
 
Map
 
Client"     class="org.s
 
pring
 
frame
 
wor
 
k.o
 
r
 
m.ibatis. 
Sql
 
Map
 
Client
 
Factory
 
Bean"> 电子科技大学硕士学位论文
 
50 
     <pro
 
perty   name="config Location"> 
         <value>/WEB-INF/i
 
B
 
a
 
t
 
i
 
s/Sql
 
Map
 
Config.xml</value> 
     </pro
 
perty> 
     <!--  
这里使用的数据源就是上面配置的数据源
  --> 
     <pro
 
perty   name="data
 
Sou
 
rce"> 
        <ref   bean="data
 
So
 
u
 
r
 
ce" /> 
     </pro
 
perty> 
</bean> 
 
配置 
Sping 
事务管理，采用的 
Data Source 
事务管理，要管理的 
Data Source 
当
然也是上面配置的 
Data Source  
。
 
<be
 
an   i
 
d = "
 
tr
 
an
 
sa
 
ct
 
ion
 
M
 
ana
 
g
 
er" 
cl
 
ass="org.spr
 
ing
  
frame
 
work.j
 
d
 
b
 
c.data
 
source.Data
 
Source
 
Transa
 
ction
 
Mana
 
ger"> 
<!--
此处的数据源就是上面配置的数据源
--> 
<prop
 
erty   name="data
 
Sou
 
rce"> 
      <ref   bean="d
 
a
 
t
 
a Sou
 
rce" /> 
</property> 
</be
 
an> 
 
配置事务管理的代理类，将其抽象化 
abstruct=true,
以后需要进行事务管理直
接继承此类就行了，非常方便。
 
<be
 
an   i
 
d="tran
 
saction
 
P
 
r
 
o
 
x
 
y"   class="org.s
 
p
 
ring
 
frame
 
work.tran
 
sact
 
ion. 
intercep
 
tor.Transa
 
ction Proxy Factory
     
Bean" ab
 
str
 
act="true"> 
<!--  
这个就是刚才配置的事务管理器
  --> 
    <pr
 
op
 
erty   na
 
m
 
e="
 
tr
 
a
 
n
 
sa
 
ct
 
ion
 
M
 
an
 
ager"> 
       <ref   be
 
an="t
 
r
 
a
 
n
 
sa
 
ction
 
M
 
anager"/> 
    </pro
 
perty> 
    <!--  
下面是 
Spring 
事务管理的策略，可以看到，凡是涉及数据库插入、
修改的操作都应当以 
add
、
insert
、
edit
、
update
、
delete 
开头，这样才能由 
spring
进行事务管理
  --> 
    <proper
 
ty   name="t
 
r
 
a
 
ns
 
action
 
Attri
 
butes"> 
       <pr
 
o
 
ps> 
        <prop key="i
 
n
 
s
 
e
 
rt*">PROP
 
AGA
 
TION_REQ
 
UIR
 
ED,-Exce
 
ption</pr
 
op> 第五章
  
系统详细设计与实现
 
51 
        <prop key="a
 
d
 
d*">PRO
 
PAGA
 
TION_REQ
 
UIR
 
ED,-Exce
 
ption</pr
 
op> 
        <prop  key="u
 
p
 
d
 
a
 
te*">PROP
 
AGA
 
TION_RE
 
QUIR
 
ED,-Exce
 
ption</pr
 
op> 
       </p
 
ro
 
ps> 
     </pro
 
per
 
ty> 
   </bean> 
然后我们在 
Spring 
注册自己的类，使用的 
sql Map Client 
由 
Spring 
自动去注入，
项目中，我将事务管理放到了 
Service 
层上，因为 
DAO 
只负责与数据库基本交互，
一般只操作一个表，无需事务。而 
Service 
层上根据业务需要处理多表，因此将事
务放在了
Service
层上，而
Service
层需要的
DAO
由
Spring
注入即可。通过在
Service
层上配置事务代理就可以处理事务了，事务代理即前面配置的 
transaction Proxy
。
 
5.2.1  
设计数据管理模块
 
电缆生产过程主要包括工艺设计、生产准备（导线印字、导线切割、标签打
印）、划线、端接、导通检测等环节，各阶段所需工艺数据均由设计给出的接线表、
线束明细表及选配数据计算生成。电缆生产过程中，为了给工艺数据处理和工艺
生产提供更大的保障，有必要在一定层次上对设计数据进行查看和管理，实现直
接从设计文件中提取数据，并根据工艺需求对设计数据进行校验，保证设计与报
表的一致性。在设计数据的管理上，之前的 
CHS 
设计数据提取及校验子系统实现
了直接从设计文件中提取数据并校验。我们的线束工艺处理平台在此基础上提供
对设计数据的查看，主要包括两类数据：线束接线关系表和用料明细表。此功能
模块主要方便工艺人员在必要的时候对设计数据进行搜索和查询。
 
这个模块主要对数据库中的接线关系表和用料明细表进行查询操作，工作流
程如图 
5-10 
所示。
 
 
图 
5-10  
设计数据查询工作流程
 电子科技大学硕士学位论文
 
52 
5.2.2  
工艺数据管理模块
 
5.2.2.1  
工艺数据选配
 
根据基础信息库信息，实现工艺数据选配，包括死接头牌号计算、焊锡环牌
号计算、线束标签牌号计算。这里我们以死接头牌号计算为例子进行说明。死接
头牌号计算是根据死接头左右两端所有接线的 
CMA
（电线面积）和死接头的选
配规则，计算出最合适的死接头牌号。死接头牌号按照大小规格可以分为许多种，
不同牌号的死接头具有不同的颜色。选择最合适的死接头牌号，是指选择死接头
大小和 
CMA 
面积最接近的死接头牌号，这样有利于节省材料。
 
程序流程如图 
5-11 
所示。
 
 
图 
5-11  
死接头牌号计算流程
 第五章
  
系统详细设计与实现
 
53 
5.2.2.2  
工艺报表生成
 
工艺报表生成是线束工艺数据处理平台子系统的核心功能。它是按照线束生
产的要求通过对工艺数据进行复杂的处理生成指定格式的各类工艺文件，用以指
导车间的工人进行生产。主要包括 
14 
类工艺报表：线束目录表、标签表、线束标
套表、导线印字表、划线表、死接头表、屏蔽处理表、线束端子表、装配工艺规
程、线束导通表、标零成材物料清单、全机端子表、
AO 
索引表、系统导通表。
现在分别介绍如下：
 

  线束目录表：提供全机最新版本（有效架次）所有线束图号相关内容。
 

  标签表：提供指定线束图中所有电线所需标签的统计，并按照标签打印机
所识别的数据格式进行输出，以直接导入标签打印机进行标签打印操作。
 

  线束标套表：提供指定线束图中所有相同标套的端子的分类、统计，并按
照标签打印机所识别的数据格式进行输出，以直接导入标签打印机进行
标签打印操作。
 

  导线印字表：提供指定线束图中需要印字的电线（即 
SMLGXX-9 
和
SMLHXX-9 
类型的导线）生成《导线印字表》用于导线印字，并可按照
配备的激光印字及所需格式进行输出。
 

  划线表：系统可对同种导线进行划线路经计算实现同种导线的连续拉线，
在保证正确性的同时可最大程度的利用现有导线材料，以减少用料浪费，
简化加工步骤。系统由线束接线数据和电缆设计图的规划路径计算结果
生成《划线表》，按照导线类型进行分类排序，实现同种导线的连续拉线，
以减少用料消耗和操作步骤。
 

  死接头表：系统根据电缆设计数据信息，结合新的工艺规则，生成《死接
头接线表》，以便于对电缆诱导的所有死接头进行端头处理和接线操作。
 

  屏蔽处理表：提供指定线束图中各端子内所有屏蔽家族。
 

  线束端子表：提供指定线束图中各端子内各针孔的连接情况生成《端子
表》，包含电缆所有的端子明细和对应到导线接线情况等详细信息，是电
缆布线及端头处理工序的检测依据及端头加工装配处理的依据。
 

  装配工艺规程：提供指定线束图中不含死接头端子的端子号及与其相关项
（主要是装配部件）。
 

  线束导通表：提供指定线束图中每根线的接线情况，生成《导通表》，包
含电缆所有导线的的导通连线关系，用于对装配好的电缆进行导通测试。
系统可把按照一定算法排序的导通信息输出为电缆测试仪要求的格式文
件，可直接导入电缆测试仪进行导通测试，提高电缆测试效率。
 电子科技大学硕士学位论文
 
54 

  标零成材物料清单：对指定图号或全机的标准件 
BZ
、零件 
LJ
、成品 
CP
、
材料 
CL 
分类汇总，生成电缆物料清单
,
用于 
CAPP 
系统生成线束制造 
AO
。
 

  全机端子表
:
提供指定架次所有图号端子。
 

  AO 索引
:
提供指定架次装配大纲索引。
 

  系统导通表
:
提供指定架次成品到成品的导通情况
 
由于表格太多，这里不一一详述每个表格的详细生成流程，下面介绍一下算
法比较复杂的线束端子表、线束划线表和系统导通表的详细设计与实现。
 
5.2.2.2.1  
线束端子表
 
线束端子表是根据指定线束图中各端子内各针孔的连接情况而生成的，它的
基础数据来源于线束接线关系表，它包含电缆所有的端子明细和对应到导线接线
情况等详细信息。它的作用是用来方便工人连接端子与端子之间的电线以及端子
与死接头之间的连线。
 
下面详细介绍线束端子表的生成规则。
 
(1)
如果电线的端子是死接头
(
端子名称以“
S
”开头
),
在端子表中则这根电线
的端子需要用它的所属端子替代，而它的针孔则用相应的死接头替代。
 
例如在接线表中，某记录如表 
5-1 
所示。
 
表 
5-1  
接线表记录
 
来向端子
  
来向针孔
  
线号
  
线规
  
颜色
  
导线牌号
  
去向端子
  
去向针孔
 
SXP400  -  C2014A  22  
白
  STHG80  50XPS  A 
在端子表中，该记录得变换为如表 
5-2 
所示（假如死接头 
SXP400 
的所属端
子为 
30XPS
）。此条记录属于端子 
SXP400 
端子下的某一条。
 
表 
5-2  
端子表记录
 
来向针孔
  
线号
  
去向端子
  
去向针孔 线号
  
线规
  
颜色
 
SXP400  C2014A  50XPS  A  C2014A 22  
白
 
 
(2)  
线束端子表需要对每个端子的电线、屏蔽线、死接头引出线和连线分别
进行统计。
 

  屏蔽引出线：某端子接线线号如果是 
SH 
开头，则认为是屏蔽引出线。同
一端子中如果多根引出线接到同一个针孔中，计数时只算作一次。举例
说明如表 
5-3 
所示。
 第五章
  
系统详细设计与实现
 
55 
表 
5-3  
端子表中屏蔽引出线记录
 
来向针孔
  
线号
  
去向端子
  
去向针孔 线号
  
线规
  
颜色
 
2ADE  
电线（
3
）
  
屏蔽引出线（
2
）
  
死接头引出线（
1
）
 
1  C20120A  9CXD  A  STLM19 22  
白
 
3  C20120A  9CXD  B  STLM19 22  
蓝
 
4  SHCC  2ADE  q  STLM16 18  
蓝
 
7  SHBJ  2ADE  w  STLM16 16  
蓝
 
7  SHBK  2ADE  a  STLM18 22  
蓝
 
S001  ZZ010  2ADF  8  STLM18 18  
白
 
S001  ZZ011  3ADE  2  STLM18 18  
白
 
由于 
SHBJ 
线和 
SHBK 
线同时接到针孔 
7
，所以这里只计算一次，再加上针孔 
4
的 
SHCC 
线，所以屏蔽引出线的数量为 
2
。
 

  死接头引出线：死接头记录中如果去向端子和死接头所属端子（即来向）
相同，则该记录算作该端子的死接头引出线。举例如表 
5-4 
所示。
 
表 
5-4 
端子表中死接头引出线记录
 
来向针孔
  
线号
  
去向端子
  
去向针孔 线号
  
线规
  
颜色
 
601AXA  
电线（
5
）
  
屏蔽引出线（
1
）
  
死接头引出线（
4
）
 
A  A00211  175XMA  7  STLM18 16  
红
 
B  A00214  175XMA  11  STLM22 22  
蓝
 
C  A00212  175XMA  4  STLM16 20  
蓝
 
BCK  SH14968  24XPS  m  STLM18 16  
红
 
S5056  A00887  601AXA  E  STLM18 22  
蓝
 
S5056  A00814  23XPS  AA  STLM24 18  
白
 
S5058  A00804  601AXA  D  STLM18 18  
白
 
S5083  A00890  601AXA  F  STLM19 22  
白
 
S5083  A00672  601AXA  G  STLM19 22  
蓝
 
在表 
5-4 
中的记录中电线 
A00887
、
A00804
、
A00890
、
A00672 
的
去向端子和死接头
所属端子（即来向）相同，所以它们为死接头引出线，总计数量为 
4
。
 
 电子科技大学硕士学位论文
 
56 

  连线：是指连接相同端子不同针孔之间的电线，即来向和去向相同的线。
是划线表中不需划的线。
 

  电线：其他三种情况以外的线就是电线，是指划线表中需要划的线。
 
端子表生成流程如图 
5-12 
所示。
 
 
图 
5-12  
线束端子表生成流程
 
关键代码如下：
 
数据对象说明如下：
 
Wire 
是代表电线实体的类，包含电线的各种属性：来向端子、去向端子、颜
色、线规等
 
List <Wire>         wire List            //
一个图纸下的电线集
 第五章
  
系统详细设计与实现
 
57 
int                 flag               //
标志位，标志是否存在相同的针孔
 
List  <String>         pbx_pins          //
放置同一端子下屏蔽线针孔的容
器
 
 
while(i< wire List.size()){//
遍历这个电线集中的所有电线
 
//
遍历同一端子下的所有电线
 
do{  
     //
处理屏蔽引出线
  
线号以“
SH
”开头
              
     if(wire List.get(i).get Name().starts With("SH")){ 
        int   flag=0;   //
初始化 
flag 
        pbx_pins.add(wire List.get(i).get From_pin ());//
加入屏蔽引出线针孔
 
        for(int m=0;m<(pbx_pins.size()-1);m++){ 
       //
比较是否有相同的针孔，若是有设置标志位为 
1 
          if(wire List.get(i).get From_pin ().equals(pbx_pins.get(m))){ 
              flag=1; 
              break; }  
        } 
       //
若是此针孔与之前的都不相同
 
        if(flag==0)   Npbx++;   //
屏蔽线数量加 
1 
        i++; 
        if(i >= wire List.size())   break;   //
已经到达最后一根电线
   } 
     //
处理连线
  
来向端子与去向端子相同
 
     else if(wire List.get(i).get From_conn.equals(connlist.get(i).get To_conn ())){ 
      Nlx++;   i++;//
连线数量加 
1 
        if(i>= wire List.size()) break;   } 
     //
死接头引出线
    
来向端子以
"S"
开头
  
来向所属端子等于去向端子
 
     else if(wire List.get(i).get From_conn().starts With("S")&& wire List.get(i). 
     get From_conn_without_splice().equals(wire List.get(i).get To_conn())){ 
        Nsjt++; i++;//
死接头引出线数量加 
1 
        if(i>= wire List.size()) break;} 
     //
电线处理
 
     else{ 
        Ndx++; i++;//
电线数量加 
1 电子科技大学硕士学位论文
 
58 
        if(i>= wire List.size()) break;} 
}while((wire List.get(i).get From_conn_without_splice().equals(connlist.get(i-1). 
get From_conn_without_splice()))
）
;  
} 
5.2.2.2.2  
线束划线表
 
线束划线表按照导线类型进行分类排序，对同牌号导线进行划线路经计算，
实现同种导线的连续拉线，以减少用料消耗和操作步骤。线束划线表的基础数据
来源于数据库中的接线关系表。
 
制表规则如下：
 
1.  
列表和步骤：
 
  1)  
统计图中“电线牌号”的种类数。
 
  2)  
将图纸中同一“电线牌号”的所有电线找出，
 
  3)  
将上述电线中电线“
  
来向”相同的所有电线分组，依次列出
 
  4)  
将相同来向的电线中相同去向的电线依次排列；
 

  单芯印字线只列出，不写“切”，不空行。
 

  单芯不印字线不切时连续，要切时空一行，标注“切”
 

  多芯线一个屏蔽家族内所有线依次列出，不空行。不同家族空行。
 
要切时应在空行
  
标注“切”
 
  5)  
相同来向的电线中相同去向的电线排完后，再排另一个去向的电线，
直到相同来向的所有电线排完。
 
  6)  
空一行。
 
  7)  
另一个来向的电线重复 
3
）
~4
），直至该“电线牌号”所有来向统计完。
 
  8)  
排完该“电线牌号”所有线后，决定划线规则，以最少切线次数为最
佳
     
划线路径，（如何在表中表示划线规则
?
即怎么表示从来向开始布线，还
 
     
是从去向开始布线）
 
  9)  
换页
 
  10)  
对另一个“电线牌号”重复 
2
）
~8
），直至所有“电线牌号”统计完。
 
2.  
表中“来向”和“去向”都是指端子号，指一根电线两端分别连接的端子。
 
3.  
不需要布的线有：
 
  a)  
“连线”即连接相同端子不同针孔之间的电线，即来向和去向相同的
线，是划线表中不需划的线。
 
  b)  
“死接头引出线
  
”是指死接头到所属端子之间的电线，
  
该端子和该第五章
  
系统详细设计与实现
 
59 
死接头之间的所有电线都不布
 
  c)  
带“
SH
”的屏蔽层不需要布线。
 
4.  
划线是遵循从左至右的顺序，“切”字可出现在来向和去向。
 
5.  
换“电线牌号”则换页。
 
程序流程如图 
5-13 
和 
5-15 
所示。其中图 
5-13 
为划线流程图，图 
5-15 
为切点
算法流程图。
 
 
图 
5-13  
划线流程
 
5.2.2.2.3  
系统导通表
 
系统导通表用于全机电路导通测试，它通过在在 
CHS 
中提取出符合某批架次
的所有电路图中的接线关系，然后经过一定的工艺规则处理生成。系统会导通表
将电路图中的接线关系，全部转换成成品到成品的导通关系，并记录所经过的线
号、结点。
 
生成系统导通表需要遵循以下原则：
 

  无冗余导通记录；
 

  消除所有死接头；
 

  链接 n TEA/n TEB、n HIP/n HPI 类端子；
 

  连接共享线；
 电子科技大学硕士学位论文
 
60 

  按照一定顺序排列。
 
系统导通表生成流程如图 
5-16 
所示。
 
 
5.2.2.3 BOM 
管理
 
BOM 
管理主要的功能是对两个 
Excel 
格式的 
BOM 
表的指定列进行比较，然
后生成比较报告，比较报告中描述了指定的列是否存在不同之处以、不同之处在
哪里以及陈列不同之处的所有行。
 
BOM 
比较的流程如图 
5-14 
所示。
 
 
图 
5-14 BOM 
比较流程
 第五章
  
系统详细设计与实现
 
61 
 
图 
5-15  
切点算法流程
 电子科技大学硕士学位论文
 
62 
 
图 
5-16  
系统导通表生成流程
 
5.2.2.3  
工艺数据管理模块的其他功能
 
工艺数据管理模块的还包括以下功能：目录管理、工艺数据维护、工艺报表
管理等，由于篇幅问题，这里对它们的详细实现不在意义赘述。下面只对它们的
功能及实现方法做个简单介绍。
 

  目录管理：目录管理对图纸的目录提供增删改查。工艺人员在我们的平台
上对图纸的目录进行编辑，在目录中加入 
AO
、工段、主管设计、工艺员
等信息。在此基础上，通过编辑好的目录我们可以生成对应的 
Excel 
文
件，方便对工艺员的工作进行分工和工段上的分工。这些操作主要是通
过对数据库中的目录规划表进行增删改查而实现的。
 

  工艺数据维护：提供对数据库中的接线关系表和用料明细表的工艺数据进
行增删改查操作。它是通过直接操作数据库中相应的表格实现的。
 

  工艺报表管理：提供对生成好的工艺报表的上传和下载，并提供工艺报表第五章
  
系统详细设计与实现
 
63 
的版本管理。版本管理包括了报表的版本升级和报表的发布，对于已经
发布的报表不再允许修改和重新生成。报表的上传和下载是通过 
Struts2
自带的模块实现的，利用 
Struts2 
的文件类标签和后台支持很容易实现文
件的长串和下载。报表的发布则是通过在存储工艺文件的数据表中设置
一个关于是否发布的标志位实现的。
 
5.2.3  
工艺更改及状态管理模块
 
工艺更改及状态管理模块主要包括登记本、解答签、工艺更改单、
AO 
设计
更改记录页、临时 
AO 
索引以及历史记录查询等功能。实现了对工艺更改的统一
有效管理，工艺更改文件的自动生成，对工艺更改流程进行控制以及对更改的反
馈。通过这个模块能实现对更改数据的记录和备份从而实现对错误更改的还原，
这样就能避免误操作带来严重的损失，大大提高了更改的安全性。
 
 
5.2.3.1  
登记本管理
 
登记本管理是通过在数据库中建立一个登记本表来实现的。登记本表字段包
括：机型、图号、编制依据、有效期、是否发布、是否作废、作废原因、设计更
改原因、白纸指示单号、晒蓝技术单号、临时 
AO 
号、临时 
AO 
名称、应用架次、
更改单号、工艺文件编号及版本、纳入整机 
AO 
号、主要内容等。它的作用主要
是用于对更改信息的记录，从而使得更改是可追溯的。
 
对其中的某些字段做出说明：
 

  编制依据：指在工艺数据管理模块中对工艺数据进行修改时候填写的更改
依据。例如：工艺完善、设计更改等；
 

  有效期：指此次更改有效的架次；
 

  白纸指示单：工艺更改单的一种；
 

  晒蓝指示单：另一种工艺更改单；
 

  主要内容：指此次更改的内容，包括哪些线的哪些属性做了什么修改。
 
登记本的主要操作是对数据库中的二维表进行增删改查。在添加一条记录的时
候我们需要对更改单进行自动取号，在这里我们是通过数据库的触发器实现的。
每插入一条记录更改单号加 
1
。同时我们还提供了重置更改单号的功能，以方便
用户在必要的时候把更改单号重置为任意一个整数。
 
登记本工作流程如图 
5-17 
所示。
 电子科技大学硕士学位论文
 
64 
 
图 
5-14  
登记本工作流程
 
5.2.3.2  
更改单生成
 
更改单是根据登记本中某一编制依据下的某一图号和有效期范围内的此编制
依据下的更改后记录和对应的更改前记录生成的。更改前的记录通过查询工艺数
据历史记录表（
Twire1_modi_history
、
TEbom2_modi_history
）可以得出，更改后
的记录通过查询工艺数据（
Twire1_modi
、
TEbom2_modi
）可以得出。更改单陈列
出电线更改前后的状态，便于工艺员和工人对比以修改。
 
更改单生成流程如图 
5-18 
所示
 
 
图 
5-15  
更改单生成流程
 第五章
  
系统详细设计与实现
 
65 
5.2.3.3  
本模块的其他功能
 
由于篇幅问题，此模块其他功能的详细实现不再一一赘述。在此只做简单介
绍。
AO 
设计更改记录页和临时 
AO 
索引表的数据都来自登记本，他们都是为了
方便工艺更改管理而生成的辅助文件。解答签方便对工艺更改做出答复。至于历
史记录查询是指对修改过的工艺数据在修改前的状态提供查询。系统对工艺数据
的每次修改都会备份修改之前的数据到历史记录表中。
 
5.2.4  
基础信息管理及对外接口模块
 
为生成工艺文件所需的工艺信息，我们需要建立电线 
CMA
、死接头选配规
则、焊锡环选配规则、标签牌号选配规则的基础信息库。此外，为使得电缆工艺
信息与厂内 
CAPP
、
PDM 
能够有机统合，还应建立相应的信息关联。
 
5.2.4.1  
基础信息库管理
 
为了实现对线束生产所需的工艺信息进行统一有效的管理，我们在数据中建
立了电线 
CMA 
表、死接头选配规则表、焊锡环选配规则表、标签牌号选配规则
表。基础信息库的管理主要是指对这四个表格的增删改查操作。
 
工作流程如图 
5-19 
所示。
 
 
图 
5-16  
基础信息库工作流程
 
5.2.4.2  
对外接口
 
对外接口包括与 
CAPP 
集成的接口和与 
PDM 
集成的接口。
 
CAPP 
系统可通过本系统提供的 
XML 
格式接口文件，用于 
CAPP 
系统来生成电子科技大学硕士学位论文
 
66 
线束制造 
AO 
文件，最终实现实现 
CAPP 
与本系统之间进行物料清单、设计更改
记录等信息的数据传递。
 
该 
XML 
格式接口文件包括：
 

  标零成材物料清单：对指定图号按标准件 
BZ
、零件 
LJ
、成品 
CP
、材料
CL 
分类汇总，生成电缆物料清单，用于 
CAPP 
系统生成线束制造 
AO
。
 

  AO 设计更改记录页：
AO 
设计更改记录主要包括图号和更改依据，由登
记本提取这两项内容，用于统计和查找更改 
AO 
号。
 
PDM 
系统是公司内部的集成办公系统，本系统为 
PDM 
提供原始的 
PBOM 
结
构，并提供一个可在线访问的 
URL 
来联通两个系统。
 
5.2.5  
系统配置及维护模块
 
该模块主要包括组织用户管理、角色权限管理和日志管理，用于对系统的配
置和维护。
 
5.2.5.1  
组织用户管理
 
组织用户管理主要是实现对组织机构、人员信息进行增删改查操作。
 
工作流程如图 
5-20 
所示。
 
 
图 
5-17 
组织用户管理
 
5.2.5.2  
角色权限管理
 
角色权限管理实现对登录用户的管理，主要是对用户名和密码进行增删改查
操作。
 
工作流程如图 
5-21 
所示。
 第五章
  
系统详细设计与实现
 
67 
 
图 
5-18 
角色权限管理
 
5.2.5.3  
操作日志管理
 
操作日志管理的功能是用来记录用户的操作行为的，主要包括：登录和注销
操作、对工艺数据信息的增删改操作、对工艺报表文件的上传下载操作、对报表
的生成和发布操作、对基础信息库的增删改操作、对登记本的增删改操作等。记
录这些行为是为了便于跟踪各个用户的行为，提供对各个用户在系统中执行的操
作历史的查询，从而起到监督的作用。
 
工作流程如图 
5-22 
所示。
 
 
图 
5-19 
操作日志管理
 电子科技大学硕士学位论文
 
68 
5.3  
数据库详细设计
 
数据库表的设计包括以下内容：
 

  表名
(
中英文
) 

  字段名
 

  字段数据类型
 

  字段是否为空
 

  字段的默认值
 

  备注，对字段的解释性说明：主键、外键等。
 
由于系统的表格太多，这里对它们的数据结构不做一一介绍。下面主要介绍
一下其中最重要的三个表格：线缆目录结构表、接线表 
1 
和明细表 
2
。因为这三
类表格是工艺数据的原始数据来源。其他的工艺数据都是间接来源于它们。
 
(1)  
线缆目录结构表 
TDirectory_AO 
线缆目录结构表记录图纸的目录信息，主要用于 
AO 
设计、工段分工。它的
字段主要包括机型（工程名）、起始架次、终止架次、图号、版本、构型码、名称、
主管设计等。详细数据结构如表 
5-5 
所示。
 
表 
5-5 
线缆目录结构表
 
  字段名 
 字
段代码 
 字
段类型 
 允
许为空 
 默
认值 
 备
注
1  序号 
 idx  number  N    主
键
2  机型 
 model  Varchar2（
20）
 N     
3  起始架次 
 shipset_start  number(10，
0)      
4  终止架次 
 shipset_end  number(10，
0)      
5  图号 
 diagram_id  var Char2（
30）
 N     
6  图版本 
 diagram_version  var Char2（
10）
      
7  构型码 
 config_code  Varchar2(10)       
8  名称 
 diagram_name  Varchar2（
30）
 N     
9  主管设计 
 author  var Char2（
16）
      
10  工艺报表 
 craft_excel  Varchar2（
20）
      
11  工艺报表版本 
 craft_excel_version Varchar2（
8）
      
12  AO 编
号 
 ao_id  Varchar2（
20）
      第五章
  
系统详细设计与实现
 
69 
13  AO 版
本 
 ao_version  Varchar2（
8）
      
14  AO 名
称 
 ao_name  Varchar2（
48）
      
15  AO 工
位号 
 ao_position  Varchar2（
20）
      
16  AO 班
组 
 ao_group  Varchar2（
16）
      
17  工艺路线 
 craft_route  Varchar2(48)       
18  主管工艺 
 author_craft  Varchar2（
16）
      
19  接线表 1
 记
录数 
 wire1_total  number(10)       
20  EBOM2 记
录数 
 ebom2_total  number(10)       
(2)  
接线表 
1 TWire1_init 
接线表中信息是描述每根导线的属性以及它和其他导线之间的联系的，每根
导线的属性包括导线来、去向，牌号、线号、线规、颜色、后缀、长度等信息。
接线表的数据结构如表 
5-6 
所示。
 
表 
5-6 
接线表 
1 
  字段名 
 字
段代码 
 字
段类型 
 允
许为空 默认值 
 备
注 
1  序号 
 idx  number  N    主
键 
2  图号_
版本 
 diag_vers  Varchar2(32)  N     
3  线号 
 name 
Varchar2(20) 
     
4  来向‐
端子 
 from_conn  Varchar2(16)       
5  来向‐
针孔 
 from_pin 
Varchar2(16) 
     
6  去向‐
端子 
 to_conn 
Varchar2(16) 
     
7  去向‐
针孔 
 to_pin 
Varchar2(16) 
     
8  线规 
 spec 
Varchar2(10) 
     
9  后缀 
 sfx 
Varchar2(10) 
     
10  颜色 
 color 
Varchar2(10) 
     
11  屏蔽族 
 mc 
Varchar2(10) 
     
12  电线牌号 
 part_num 
Varchar2(20) 
     
13  电线长度（m
m）
  length 
number(12,2) 
     
14  电路图 
 logic_name 
Varchar2(40) 
     电子科技大学硕士学位论文
 
70 
(3)  
明细表 
2 TEbom2_init 
明细表 
2 
中包括插头、后附件、电线接头、标记套、电线、电缆等信息。明
细表 
2 
包含线缆生产用料的明细，主要作用是通告专管材料的部门这个图纸各种
用料的耗费是多少，便于预先生产各类用料，以保证用料的供给和充足。同时明
细表 
2 
中的各种信息可以用于生成各类工艺报表，比如：标零成材物料清单表，
装配工艺规程表、线束表套表等
 
明细表 
2 
的数据结构如表 
5-7 
所示。
 
表 
5-7  
明细表 
2 
  字段名 
 字
段代码 
 字
段类型 
 允
许为空 
 默
认值 
 备
注 
1  序号 
 idx  number  N    主
键 
2  图号_
版本 
 diag_vers  Varchar2(32)  N     
3  项目代号 
 conn Id 
Varchar2(20) 
     
4  名称 
 name 
Varchar2(20) 
     
5  零件号 
 part_num 
Varchar2(20) 
     
6  数量 
 quantity 
Varchar2(10) 
     
7  单位 
 unit 
Varchar2(6) 
     
8  重量 
 weight 
Varchar2(10) 
     
9  单元件类别 
 unit_type 
Varchar2(10) 
     
10  图样类型 
 patt_type 
Varchar2(10) 
     
11  AO 分
类 
 ao_type 
Varchar2(2) 
     
12  CHS 名
字 
 chs_name 
Varchar2(20) 
     
13  类型标识 
 type_mark 
varchar(1) 
     
说明：
TEbom2_init 
表字段 
13
，值为 
0 
表示端子，
1 
表示后附件，
2 
表示端子
其他附属件，
3 
表示电线，
4 
表示电缆，
5 
表示死接头，
6 
表示其他部件。
 
5.4  
本章小结
 
本章在第四章系统总体设计的基础上，分模块地深入描述了各个部分具体的
实现及关键数据结构与代码，本系统包括设计数据提取及校验和线束工艺数据处
理平台两个子系统。由于本系统包括众多模块，鉴于篇幅关系就只对核心模块（主
要设计提取与校验以及工艺数据管理模块中的工艺报表生成）的设计与实现作了第五章
  
系统详细设计与实现
 
71 
详细说明，而系统的其他模块的设计与实现只做简单说明。最后对系统数据库中
的某些重要表格的数据结构的设计做了详细的说明。电子科技大学硕士学位论文
 
72 
第六章
  
测试与分析
 
6.1  
测试说明
 
本系统包括 
CHS 
设计数据提取与校验子系统和飞机线束工艺数据处理平台
子系统两个个子系统，同时每个子系统又包含众多功能模块。由于篇幅问题，这
里我们只对系统的核心模块进行测试。核心模块包括：设计数据提取模块、设计
规则校验模块和工艺数据管理模块。下面就对这三个模块的测试进行详细的说明
并加以分析。
 
6.2  
测试环境
 
在测试本系统时，为了方便调试，服务器和客户端采用同一台主机。软硬件
配置环境如表 
6-1 
所示。
 
表 
6-1  
软硬件配置
 
硬件配置
 
处理器
  Intel(R) Core(TM) i5-4570@3.10GHZ 3.10GHZ 
内存
  8GB 
硬盘剩余空间
  500GB 
以上
 
软件配置
 
操作系统
  Windows 7 
旗舰版（
64 
位）
 
数据库软件
  oracle 10g 
Java 
库版本
  jdk1.7.0 
web 
应用服务器
  apache-tomcat-7.0.23 
浏览器
  360 
浏览器
 
设计及工艺数据来源
 
飞机制造厂专门提供的测试数据
 第六章
  
测试与分析
 
73 
6.3  
系统功能测试与结果分析
 
6.3.1  
设计数据提取功能测试
 
测试步骤如下：
 
1
、启动 
CHS  Harness XC
，并打开待提取工程，再打开需要提取的图纸，如
图 
6-1 
所示。
 
 
图 
6-1 CHS Harness XC 
启动
 
2
、在图 
6-1 
中红色方框内（图纸内容主体显示）的任意位置单击鼠标右键，
如图 
6-2
，选择“
Custom
”，再选择“明细表和接线表提取
(
单图纸
)-
数据库”，将
弹出图 
6-3 
所示对话框，即启动了插件。
 
3
、图 
6-3 
中的机型如果不填写，即保持空白，则当前提取的图纸数据归属的
机型为当前 
CHS 
的工程名；如果填写，当前提取的图纸数据归属为填写的自定义
机型名。线束号为当前打开图纸设计的 
Part Number
，电路图 
Build List 
需要选择与
该图纸同步的电路图范围，用于限定接线表中“电路图”字段的搜索范围，也是
端子设备表的生成数据源。如果电路图 
Build List 
为空，则接线表中“电路图”字
段都为空，将不生成端子设备表，插件也会正常运行。一切就绪后，点击“提取”，
插件将提示您确认当前的提取机型，如图 
6-4 
所示，点击“是”则开始进行数据电子科技大学硕士学位论文
 
74 
的提取操作，点击“否”则取消并回退到图 
6-3 
界面，在图 
6-3 
中点击“取消”
则退出该插件。
 
 
图 
6-2  
右击菜单显示
 
 
图 
6-3  
插件启动对话框
 
 
图 
6-4  
提取数据确认
 
(4)  
点击“是”开始对机型为 
projtest2012618 
的数据进行提取，将接线表和第六章
  
测试与分析
 
75 
明细表提取到 
oracle 
数据库。数据库中接线表数据如图 
6-5 
所示。
 
 
图 
6-5  
接线表数据
 
数据库中明细表数据如图 
6-6 
所示。
 
 
图 
6-6  
明细表数据
 电子科技大学硕士学位论文
 
76 
6.3.2  
设计规则校验功能测试
 
测试步骤如下：
 
1
、启动插件，在 
Capital Harness XC 
中打开需要校验的线束设计图，
DRC 
插
件默认只校验当前打开的图纸。
 
2
、依次点击菜单“
Tools
”、“
  Design  Rule  Checks...
”，出现一个对话框，如
图 
6-7 
所示，在对话框下方找到 
Custom 
选项
  
，选中 
Custom 
中需要校验的规则，
再点“
OK
”，即开始了校验操作。
 
 
图 
6-7 DRC 
操作界面 
3
、操作完成后在 
E 
盘中的“错误信息提示”文件夹中保存了结果报告 
txt 
文
件，如果某条规则校验通过，也会产生相应的文件，其内容为“
1
、没有检测到违第六章
  
测试与分析
 
77 
规记录”。在 
CHS 
中也即时输出了结果信息，如图 
6-8 
所示。
 
 
图 
6-8  
校验结果报告
 
6.3.3  
工艺数据管理功能测试
 
工艺数据管理模块最核心的功能是工艺报表生成，下面将介绍对工艺报表生
成的测试。
 
测试步骤如下：
 
(1)  
登录系统，选择机型、架次和在此范围内的图号，然后点击菜单进入工
艺报表生成的操作界面，如图 
6-9 
所示。
 
 
图 
6-9  
工艺报表生成操作界面
 电子科技大学硕士学位论文
 
78 
(2)  
这里以端子表和划线表进行举例说明，点击端子表和划线表相应的“生
成报表”按钮，系统会提示成功生成报表如图 
6-10 
所示。
 
 
图 
6-10  
报表生成成功提示
 
(3)  
端子表和划线表都来源于数据库中的接线关系表，原始接线关系数据如
图 
6-11 
所示，经过线束工艺平台处理后生成的端子表如图 
6-12 
所示，划线表如
图 
6-13 
所示。
 
 
图 
6-11  
原始接线关系部分数据
 第六章
  
测试与分析
 
79 
 
图 
6-12  
线束端子表
 
 
图 
6-13  
线束划线表
 电子科技大学硕士学位论文
 
80 
6.3.4  
测试结果及分析
 
系统从 
2012 
年 
11 
月的测试版至今已试用 
1 
年多，期间出现一定的错误，但
在开发人员和工艺组人员的共同努力下，得以修正。目前系统运行稳定、操作简
便、执行效率高，试用具体情况如下：
 
1  
基础数据 
6 
张数据表，插入约 
1200 
余行基础数据，很方便地就加入了许多
新的工艺规则，丰富了基础工艺信息，验证了基础信息库的灵活性和可扩展性。
 
2  
已录入线束 
100 
根，测试线束 
50 
根；设计接线关系 
53455 
行；设计明细记
录 
12034 
行；工艺接线关系 
27655 
行，在如此庞大的数据量下，系统依然稳定准
确无误地运行，从而验证了系统的稳定性和抗压性。
 
3  
生成工艺报表文件 
1200 
余份，报表中的数据基本上准确无误，已经投入到
车间工段中使用，反应良好。验证了工艺平台处理数据的准确性。
 
4  
系统执行效率高，在当前 
PC 
机环境下设计单张图纸数据导入最长不超过 
2
秒，，
DRC 
校验时长也不超过 
2 
秒，单张报表生成不超过 
3 
秒，极大的提高工艺
处理效率。验证了设计数据提取、校验以及工艺报表生成的高效性。
 
从测试结果来看，本系统很好的完成了预期的目标，基本上能快速而稳定地
提取设计数据并进行 
DRC 
校验，同时在线束工艺处理平台上也能够按照需求准
确无误地对工艺数据进行处理，生成符合要求的工艺报表文件，方便工艺员进行
设计、指导工人进行生产，在很大程度上提高了线缆设计与生产的效率。
 
6.4  
本章小结
 
本章首先对系统的测试环境做了说明，然后详细介绍了系统核心模块的测试
步骤和测试结果，最后对测试的结果做出合理的分析。通过测试我们验证了系统
的功能目标和性能目标，其中最重要的是验证了设计数据提取与校验的数据准确
性以及工艺报表文件的数据准确性。
 第七章
  
总结与展望
 
81 
第七章
  
总结与展望
 
7.1  
工作总结
 
本文首先分析了传统飞机线束工艺设计与生产的固有缺陷，然后又分析了厂
内当前存在的业务问题，为了完善这些缺陷和解决这些问题，我们提出了一种新
的解决方案。在这个解决方案中，我们将美国 
Mentor Graphics 
公司的 
CHS(Capital 
Harness System)
专业线束设计软件引入到飞机线束设计的过程中，
CHS 
软件提供
基于 
Java 
语言的 
API
，支持从设计文件中直接提取设计数据和进行校验，基于它
我们设计并实现了一个新型的飞机线束工艺数据生成与管理系统。解决了之前存
在的诸多问题，大大提升了飞机线束工艺设计与生产制造的工作效率，很大程度
上满足了现代飞机线束工艺设计与生产制造的要求。
 
本文主要完成了以下工作：
 
1.  
设计并实现了 
CHS 
设计数据提取与校验子系统，根据飞机设计与生产的
要求对 
CHS 
软件进行了二次开发，从 
CHS 
设计文件中直接提取设计数据并进行
DRC 
校验，然后将提取的设计数据存入 
Oracle 
数据库。通过这个子系统我们实现
了以下目标：自动提取设计数据，不需耗费很大的人力成本；工艺审查实现程序
自动化，并且 
CHS 
设计文件包含的数据更丰富，有利于我们提高设计和工艺数据
校验的能力，大量减少在生产阶段出现的问题；能确保设计数据和工艺数据的一
致性；
CHS 
中电路图更加清晰，也便于放大，这样就解决电路图可视化的难题。
 
2.  
设计并实现一个基于 
B/S 
架构的飞机线束工艺数据处理平台子系统。将提
取到 
Oracle 
数据库中的设计数据进行复制作为该平台工艺数据处理的原始材料，
该平台主要用来对工艺数据进行处理以生成指定格式的工艺文件指导工人进行生
产，并对工艺数据及更改状态进行管理。包括以下五个功能模块：设计数据管理、
工艺数据管理、工艺更改及状态管理、基础信息管理及对外接口、系统配置及维
护。通过这个工艺处理平台达到了以下目标：工艺数据处理实现全数字化、工艺
报表信息完整，包含线束生产所需的全部工艺信息、增添变更管理并对变更执行
状态的反馈进行记录，完善了工艺变更机制。
 
3.  
对系统进行测试和结果分析，主要包括系统的功能测试和对工艺报表文件
数据的准确性进行测试和验证。通过测试和验证，表明我们的新系统解决了之前
业务上存在的诸多问题，在功能上和性能上也达到了预期的目标。
 
本文课题来源于飞机线束工艺设计与生产的实际应用，从工厂的业务现状出
发，为解决当前实际生产中的业务难题，提出了一种新的解决方案，设计并实现电子科技大学硕士学位论文
 
82 
了一个新型的飞机线束工艺数据生成与管理系统。该系统已经投入使用一年多，
较好的达到了预期的目标，极大的提高了飞机线束工艺设计与生产的工作效率。
很好地满足了现代飞机制造的要求。
 
7.2  
不足与展望
 
系统至今投入 
1 
年多，期间出现一定的错误，但在开发人员和工艺组人员的
共同努力下，得以修正。目前系统运行稳定、操作简便、执行效率高。飞机线束
工艺设计及制造是一项专业要求极高的工作，该过程涉及数据种类多，数据量大，
逻辑规则繁琐，需结合大量数据进行规则总结和反复调试，不仅要求开发人员有
丰富的软件开发经验，而且要求开发人员深入、透彻的理解业务。因此，出错主
要由两方面引发：一是对需求的理解不到位，二是实现过程中的疏忽。在一年多
的使用期间发现系统存在以下问题有待改善。
 
1.  
由于在某些问题上和用户沟通得不是很好，对某些功能的实现上不是很符
合用户的操作习惯
 
2.  
由于在某些功能上对需求的理解不是很到位，导致某些功能模块的实现存
在一些缺陷。例如：解答签记录没有实现很好的分组。
 
3.  
由于工艺变更业务机制不是很完善，所以工艺更改及状态管理模块的实现
不是很完善，以后有待加强。
 致谢
 
83 
致
  
谢
 
时光荏苒如白驹过隙，闭着眼睛回想，开学仿佛就在昨日，睁开眼就到毕业
了。在电子科技大学的这三年里，我夯实了专业基础，掌握了更多的专业技能；
同时也学会了很多为人处世的道理，成长了很多。
 
在这里我首先要感谢我的导师李毅超教授。在研究生学习的这三年期间，李
老师春风化雨潜移默化地对我在学习和生活上带来很多积极的影响。在学习上老
师对我提供了很多帮助，尤其是在开题报告、中期报告和论文写作的过程中给了
我很多建议，并不辞辛苦地对我的论文进行评阅和指导。在科研工作上，老师也
教给我很多宝贵的经验和方法，这些让我受益匪浅，少走了不少弯路。
 
感谢付毓生老师，感谢您对我的信任和指导，感谢您给我提供这样一个可以
学习实践、积累经验和施展能力的平台。在这个项目中，我不仅掌握了很多专业
技能，而且把所学的应用到实际项目中，积累了不少宝贵的工程项目经验；同时
也学会了许多与客户进行沟通和交流的技巧；再者您也教给我不少为人处世的道
理，这些都有助于我以后的工作和生活。
 
感谢任春辉老师，感谢您在学习上和生活上给予我的关怀和帮助，也感谢您
在项目中对我的信任和指导。
 
感谢项目组中的曹志杰、何中全、冯利和曹俊青同学。你们在项目中扎实肯
干、不辞劳累，正是因为大家的团结一致、携手努力和共度难关，我们的项目才
得以顺利推进并成功验收。感谢甲方公司的章工，感谢您对我的信任和认可，也
感谢您耐心地与我们交流项目中的各个问题、配合我们的工作。
 
感谢教研室的兄弟姐妹们。你们营造了一个干净舒适、团结友爱、轻松愉快
的科研环境。和你们共度的时光是闪亮的日子，每天都很精彩和开心，这些是我
人生中值得珍藏的回忆。
 
特别感谢我的父母、姐姐和姐夫。在我读研期间，你们给予了我极大的理解、
支持和鼓励，你们为我付出的心血以及对我的期望，我将铭记于心。
 
最后，感谢各位论文评审老师在百忙之中抽空来评阅我的论文。电子科技大学硕士学位论文
 
84 
参考文献
 
[1]  
卢鹄，范玉青
.
飞机简化构型管理关键技术研究
[J].
航空维修工程，
2007, 3: 12-15 
[2]  
范丽华，伍剑刚，刘永红
.
飞机构型管理研究与应用
[J].
洪都科技，
2008, 1: 33-36 
[3]  
郝冬晶
.
基于 
CHS 
软件的飞机线束设计应用
[J].
科技资讯
,2013, 16: 19-20 
[4]  
田斌
,
李青
.
飞机线束生产计算机辅助工艺设计技术研究
[J].
机械工程师
,2011, 3: 72-75 
[5]  M.  Green.  Industry  white  paper2:  what  is  configuration  management[EB/OL]. 
http://www.cmstat.com.paper/what_is_configuration.htm,1999 
[6] M. Clerc. Industry white paper2: About ICM[EB/OL].http://www.icmhp.com,2000 
[7]  
陈卓
.
民用飞机电气线路的设计流程
[J].
航空科学技术
,2012, 6: 101-103 
[8]  
王美靖
.
基于 
CHS 
与
  Pro/E_cabling  
电气系统线缆线束数字化设计
[J].
车辆与动力技术，
2013, 3: 112-114 
[9]  
杨雨图，李亚白，王灵生
.
面向飞机装配的工艺设计与管理系统研究与开发
[J].
机械科学与
技术，
2005, 24(11): 1354-1358 
[10]  
国防科学工业技术委员会
.HB 6438-2005.
飞机线束加工通用要求
[S].
北京：中国航空综合
技术研究所，
2006 
[11]  
燕宜军
.
基于 
AO 
的飞机装配架次管理系统的研究与开发
[D].
南京
:
南京航空航天大学，
2007,12-13 
[12]  
刘新华，张旭堂，彭高亮
.
基于本体的工艺准备信息表达方法研究
[J].
计算机工程与设计，
2009, 30(7): 1764-1767 
[13]  
吴晓琳，杨明，丁友根
.
飞机电气系统计算机辅助工艺性审查和工艺审定
[J].
航空工程与
维修，
2000, 1: 40-41 
[14]  
国防科学工业技术委员会
.GJB 1014.1-90.
飞机布线通用要求总则
[S].
北京：中国航空综合
技术研究所
,1991 
[15]  
朱艾华
.
军队信息化建设方略
[M].
北京
:
国防科技大学出版社，
2003, 254-255 
[16]  
王庆林
.
飞机构型管理
[M].
上海：科技出版社，
2005, 23-25 
[17]  
于勇，范玉清
.
飞机构型管理研究与应用
[J].
北京航空航天大学学报，
2005, 31(3): 43-45 
[18]  
魏微
.
飞机构型控制和管理初探
[J].
科技信息，
2012, 13: 52-55 
[19]  
邹冀华，范玉清，蒋建军
.
欧洲空客飞机构型控制与更改技术研究
[J].
中国科技论文在线，
2008, 9: 25-27 
[20]  
李宁
.Java Web 
开发技术大全
[M].
北京：清华大学出版社，
2009, 55-58 
[21]  
常建功
.Java Web 
典型模块与项目实战大全
[M].
北京：清华大学出版社，
2011, 135-137 参考文献
 
85 
[22]  
李刚
.Struts2 
权威指南—基于 
webwork 
核心 
MVC 
开发
[M].
北京
:
电子工业出版社，
2009, 
205-207 
[23]  
刘玉军
.
基于 
J2EE 
的电子公文传输系统设计与实现
[D].
成都：电子科技大学，
2012, 18-20 
[24]  (
美
)Alistair  Cockburn,
苏敬凯等译
.
敏捷软件开发
[M].
北京：机械出版工业出版社，
2008, 
128-130 
[25]  
马季兰等
.
基于 
XML 
和 
J2EE 
的电子政务平台构建方法的研究仁
[J],
太原理工大学学报，
2006, 51: 112-113 
[26]  (
美
)Craig  Walls,Ryan  Breidenbach.Spring  in  Action  Second  Edition[M].
北京
:
人民邮电出版
社，
2008, 253-257 
[27]  (
德
)Christian  Heilmann,
牛海彬等译
.
深入浅出 
Java Script[M].
北京
:
人民邮电出版社，
2008, 
254-255 
[28] Jesse Liberty,Dan Hurwitz. ASP.NET Programming[M].
南京
:
东南大学出版，
2006, 354-355 
[29] Hall,Duncan. The ethical software engineer[C].In IEEE Software,Bei Jing, 2009, 5-6 
[30]  J.Carver.  Post-Workshop  Report  for  the  Third  International  Workshop  on  Software 
Engineering  for  High  Performance  Computing  Applications  (SE-HPC  07)[C].  Sigsoft 
Software Eng,Bei Jing, 2007, 38-43 
[31]  D.E.Post,  R.P.Kendall.  Software  Project  Management  and  Quality  Engineering  Practices  for 
Complex,Coupled  Multiphysics,  Massively  Parallel  Computation  Simulations:  Lessons 
Learned from ASCI[C]. High Performance Computing Applications,Beijing, 2004, 399-416 
[32]  Shu-Hsien  Liao,  Ching-Hsue  Cheng,  Wei-Bang  Liao.  A  Web-based  architecture  for 
implementing  electronic  procurement  in  military  organizations[J].  Technovation,  2003,  23: 
521-532 
[33]  T.S.Liao,  M.T.Wang.  A  framework  of  electronic  tendering  for  government  procurement[J]. 
Automatin in Construction, 2002, 11: 731-735 
[34] Anonymous. Nexaweb Adds Reusable Framework for Application Modernization to Flagship 
Enterprise Web Suite[J]. Wireless News, 2008, 15: 36-38 
[35]  Zhang,  Wenjun.  Integrated  Web  Architecture  Based  on  Web3D,  Flex  and  SSH[J].  Journal  of 
Software Engineering and Applications, 2010, 31: 254-256 
[36] Malcom Gethers, Denys Poshyvanyk. Integrating conceptual and logical couplings for change 
impact analysis in software[J]. Empirical Software   Engineering, 2013, 185: 1556-1559 、
：
云
１
、
Ｍ
－
 

，
莉
－
？
－
■



！
成
＇
，
１
－

－
＝

；
■ 

－

．

－
＇

，


ｔ

。
．

■


—
气
．
，
一
三

ｔ

？

？

■
Ｉ

？
—

＇
． ．

－
■

－

－

＾

．

■
－
以
一

Ｉ
＇
－
４
击 
钟
必 
＊ 
含
’

Ｉ

Ｖ
？

Ｕ
Ｎ
Ｗ
Ｅ
ＲＳ
Ｉ
Ｔ 
Ｖ

Ｃ
Ｆ 
 
占 
Ｌ
Ｅ
Ｃ
Ｔ 
Ｒ 
ＯＷ 
Ｃ

Ｓ 
Ｃ
Ｉ

６ 
Ｎ 
Ｃ 
Ｅ 
 
Ａ Ｎ 口 
 
Ｔ
Ｅ 
Ｃ 
Ｈ 
Ｎ Ｏ Ｌ 
Ｏ 
百 
Ｙ

Ｏ 
Ｆ
Ｃ
Ｈ
Ｉ
Ｗ

＇

１
＊
■
施
一
一 …
早
－

＜
＿

．

－
５
－
－

，

＊
＊
．


．

ｒ
－

＾

．

■
画
，
％
罪
．
－
删
专 业 学 位 硕
：
ｔ 
学 位 论 文
Ｍ
Ａ ＳＴ
Ｅ 
Ｒ

ＴＨ Ｅ
Ｓ
Ｉ
Ｓ

Ｆ 
Ｏ 
Ｒ

Ｐ 
Ｒ 
Ｏ 
Ｆ 
Ｅ Ｓ Ｓ
Ｉ
Ｏ Ｎ 
Ａ
Ｌ

Ｄ 
Ｅ 
Ｇ Ｒ 
Ｅ Ｅ
Ｓ
Ｓ
ｉ
ｌ
Ｅ
ｓ
ｒ
＇
＇

＇
．
＇
Ｂ
ｒ

；
ｊ
ｉ
Ｗｆｌ
Ｃ
Ｊ 
ｐ
ｆ
ｗ
■
一

绽
续
敎
ｒ
＊
＇
ｔ
ｔ
ｔ
Ｙ
！
＊
、
？
’
＞
？
’

．
的
》
？
？
＊

Ｖ
．
｜
４
和
４ 
，




Ｊ
■
■
卢
，
一

Ａ
／

１
＾ 
．
．
－
‘
旅
； ；
ｇ 
ｗ
． 
．
＼
， －

＂
．  ．
绛
－
．

■
■

．

＇
‘
二 
■


—
？

古


＇

＇
■

．



：
、

＾
．
－ 
？

１
．
？
＃

＼
．
．


．

＊

＇

Ｊ
＿

■


．
４
，

＇

：
—

Ｉ
？

．
…

 
．
． 
．


＿
＜
．

ｉ
？
■

－
‘

＇
＞


． 
■
．
Ｖ
，
？
；


．

■

■
＝
？
■

＾

 
？


■



＇
二
与
＇

■
；



＇



－
■

＜

气
．

＾
ｐ
ｉ
ｂ
ｐ